# Execution begins at address 0 
# BURAK BAHAR 2380137

.pos 0
    irmovq stack, %rsp
    irmovq root, %rdi
    irmovq array, %rsi
    irmovq 8, %rdx   #array len
    call collect_into
    halt
       # Terminate program 
.pos 
# rdi root, rsi is array , rdx array_len and I think values returned stored at rax
collect_into:
    pushq %rsi                
    pushq %rdi               #push root
    #if
    andq %rdi, %rdi         # if(root) ???
    je end                # root is null then return
    irmovq 0, %r13
    subq %r13 , %rdx
    jle end
    #else
    mrmovq 8(%rdi), %rdi #root  = root->left
    call collect_into
    rrmovq %rax, %r8  #first recursion
    pushq %r8       #preserve left_len
    #if
    subq %rdx, %r8
    je end_a
    popq %r8
    popq %rdi
    popq %rsi
    pushq %rsi
    rrmovq %r8, %rcx
    addq %rcx, %rcx
    addq %rcx, %rcx
    addq %rcx, %rcx
    addq %rcx, %rsi 
    mrmovq (%rdi), %r13
    rmmovq %r13, (%rsi)          # array[left_len]   
   
    mrmovq 16(%rdi), %rdi       #modify
    pushq %rdx
    pushq %r8
    irmovq 1, %r10              # constant 1
    irmovq 8, %r12
    addq %r12 ,%rsi
    subq %r8, %rdx
    subq %r10, %rdx
    
    
    call collect_into
    popq %r8
    popq %rdx
    rrmovq %rax, %r9  #right_len
    addq %r10, %rax
    addq %r8, %rax
    popq %rsi
    ret
end_a:
    popq %r8
    rrmovq %r8, %rax
    popq %rdi
    popq %rsi
    ret
end:
    irmovq 0, %r11  #temp
    rrmovq %r11, %rax
    popq %rdi
    popq %rsi
    ret
    # Return
    .pos 0x100
array_len:
.quad 8
# Stack starts here and grows to lower addresses
    .pos 0x200
root:
    .quad 17
    .quad node6
    .quad node24
node6:
    .quad 6
    .quad node4
    .quad node11
node4:
    .quad 4
    .quad node3
    .quad node5
node3:
    .quad 3
    .quad 0
    .quad 0
node5:
    .quad 5
    .quad 0 # Remember that 0 is null.
    .quad 0
node11:
    .quad 11
    .quad node8
    .quad 0
node8:
    .quad 8
    .quad 0
    .quad 0
node24:
    .quad 24
    .quad node19
    .quad node40
node19:
    .quad 19
    .quad 0
    .quad 0
node40:
    .quad 40
    .quad 0
    .quad node52
node52:
    .quad 52
    .quad 0
    .quad 0
# Stack starts here and grows to lower addresses
    .pos 0x800
stack:

    .pos 0x400
array:
.quad 0
.quad 0
.quad 0
.quad 0
.quad 0
.quad 0
.quad 0
.quad 0

