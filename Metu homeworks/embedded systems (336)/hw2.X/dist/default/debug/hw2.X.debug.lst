

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Fri May 27 23:55:20 2022

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    34                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    35                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    37  0000                     
    38                           ; Version 2.20
    39                           ; Generated 12/02/2020 GMT
    40                           ; 
    41                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F8722 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     
    73                           	psect	idataCOMRAM
    74  000C94                     __pidataCOMRAM:
    75                           	callstack 0
    76                           
    77                           ;initializer for _health_points
    78  000C94  3F                 	db	63
    79  000C95  30                 	db	48
    80  000C96  5B                 	db	91
    81  000C97  4F                 	db	79
    82  000C98  66                 	db	102
    83  000C99  6D                 	db	109
    84  000C9A  7D                 	db	125
    85  000C9B  07                 	db	7
    86  000C9C  7F                 	db	127
    87  000C9D  6F                 	db	111
    88                           
    89                           ;initializer for _ander
    90  000C9E  0007               	dw	7
    91                           
    92                           ;initializer for _count_cap
    93  000CA0  0100               	dw	256
    94                           
    95                           ;initializer for _level_init
    96  000CA2  0068               	dw	104
    97                           
    98                           ;initializer for _d
    99  000CA4  5E                 	db	94
   100                           
   101                           ;initializer for _n
   102  000CA5  54                 	db	84
   103                           
   104                           ;initializer for _E
   105  000CA6  79                 	db	121
   106                           
   107                           ;initializer for _S
   108  000CA7  6D                 	db	109
   109                           
   110                           ;initializer for _O
   111  000CA8  3F                 	db	63
   112                           
   113                           ;initializer for _L
   114  000CA9  38                 	db	56
   115                           
   116                           	psect	nvCOMRAM
   117  000049                     __pnvCOMRAM:
   118                           	callstack 0
   119  000049                     _health:
   120                           	callstack 0
   121  000049                     	ds	2
   122  0000                     _TMR0	set	4054
   123  0000                     _T0CONbits	set	4053
   124  0000                     _T1CONbits	set	4045
   125  0000                     _PORTH	set	3975
   126  0000                     _TMR1H	set	4047
   127  0000                     _TMR1L	set	4046
   128  0000                     _INTCON	set	4082
   129  0000                     _T1CON	set	4045
   130  0000                     _T0CON	set	4053
   131  0000                     _LATF	set	3982
   132  0000                     _ADCON0bits	set	4034
   133  0000                     _INTCONbits	set	4082
   134  0000                     _LATA	set	3977
   135  0000                     _LATB	set	3978
   136  0000                     _LATD	set	3980
   137  0000                     _LATE	set	3981
   138  0000                     _LATG	set	3983
   139  0000                     _PORTG	set	3974
   140  0000                     _PORTF	set	3973
   141  0000                     _PORTE	set	3972
   142  0000                     _PORTD	set	3971
   143  0000                     _LATC	set	3979
   144  0000                     _PORTC	set	3970
   145  0000                     _PORTB	set	3969
   146  0000                     _PORTA	set	3968
   147  0000                     _TRISH	set	3993
   148  0000                     _PORTJ	set	3976
   149  0000                     _TRISJ	set	3994
   150  0000                     _TRISG	set	3992
   151  0000                     _TRISF	set	3991
   152  0000                     _TRISE	set	3990
   153  0000                     _TRISD	set	3989
   154  0000                     _TRISC	set	3988
   155  0000                     _TRISB	set	3987
   156  0000                     _TRISA	set	3986
   157                           
   158                           ; #config settings
   159                           
   160                           	psect	cinit
   161  000BB8                     __pcinit:
   162                           	callstack 0
   163  000BB8                     start_initialization:
   164                           	callstack 0
   165  000BB8                     __initialization:
   166                           	callstack 0
   167                           
   168                           ; Initialize objects allocated to COMRAM (22 bytes)
   169                           ; load TBLPTR registers with __pidataCOMRAM
   170  000BB8  0E94               	movlw	low __pidataCOMRAM
   171  000BBA  6EF6               	movwf	tblptrl,c
   172  000BBC  0E0C               	movlw	high __pidataCOMRAM
   173  000BBE  6EF7               	movwf	tblptrh,c
   174  000BC0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   175  000BC2  6EF8               	movwf	tblptru,c
   176  000BC4  EE00  F029         	lfsr	0,__pdataCOMRAM
   177  000BC8  EE10 F016          	lfsr	1,22
   178  000BCC                     copy_data0:
   179  000BCC  0009               	tblrd		*+
   180  000BCE  CFF5 FFEE          	movff	tablat,postinc0
   181  000BD2  50E5               	movf	postdec1,w,c
   182  000BD4  50E1               	movf	fsr1l,w,c
   183  000BD6  E1FA               	bnz	copy_data0
   184                           
   185                           ; Clear objects allocated to COMRAM (40 bytes)
   186  000BD8  EE00  F001         	lfsr	0,__pbssCOMRAM
   187  000BDC  0E28               	movlw	40
   188  000BDE                     clear_0:
   189  000BDE  6AEE               	clrf	postinc0,c
   190  000BE0  06E8               	decf	wreg,f,c
   191  000BE2  E1FD               	bnz	clear_0
   192  000BE4                     end_of_initialization:
   193                           	callstack 0
   194  000BE4                     __end_of__initialization:
   195                           	callstack 0
   196  000BE4  904B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   197  000BE6  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   198  000BE8  0100               	movlb	0
   199  000BEA  EF9D  F004         	goto	_main	;jump to C main() function
   200                           
   201                           	psect	bssCOMRAM
   202  000001                     __pbssCOMRAM:
   203                           	callstack 0
   204  000001                     _a:
   205                           	callstack 0
   206  000001                     	ds	2
   207  000003                     _l2_over:
   208                           	callstack 0
   209  000003                     	ds	2
   210  000005                     _health_check:
   211                           	callstack 0
   212  000005                     	ds	2
   213  000007                     _timer_flag:
   214                           	callstack 0
   215  000007                     	ds	2
   216  000009                     _start_flag:
   217                           	callstack 0
   218  000009                     	ds	2
   219  00000B                     _decrease_health_flag:
   220                           	callstack 0
   221  00000B                     	ds	2
   222  00000D                     _RA:
   223                           	callstack 0
   224  00000D                     	ds	2
   225  00000F                     _note_generate_flag:
   226                           	callstack 0
   227  00000F                     	ds	2
   228  000011                     _input_G:
   229                           	callstack 0
   230  000011                     	ds	2
   231  000013                     _input_compare_flag:
   232                           	callstack 0
   233  000013                     	ds	2
   234  000015                     _light:
   235                           	callstack 0
   236  000015                     	ds	2
   237  000017                     _randomed:
   238                           	callstack 0
   239  000017                     	ds	2
   240  000019                     _exit_flag:
   241                           	callstack 0
   242  000019                     	ds	2
   243  00001B                     _wait:
   244                           	callstack 0
   245  00001B                     	ds	2
   246  00001D                     _low:
   247                           	callstack 0
   248  00001D                     	ds	2
   249  00001F                     _high:
   250                           	callstack 0
   251  00001F                     	ds	2
   252  000021                     _initial_timer1:
   253                           	callstack 0
   254  000021                     	ds	2
   255  000023                     _note_count:
   256                           	callstack 0
   257  000023                     	ds	2
   258  000025                     _level:
   259                           	callstack 0
   260  000025                     	ds	2
   261  000027                     _t_count:
   262                           	callstack 0
   263  000027                     	ds	2
   264                           
   265                           	psect	dataCOMRAM
   266  000029                     __pdataCOMRAM:
   267                           	callstack 0
   268  000029                     _health_points:
   269                           	callstack 0
   270  000029                     	ds	10
   271  000033                     _ander:
   272                           	callstack 0
   273  000033                     	ds	2
   274  000035                     _count_cap:
   275                           	callstack 0
   276  000035                     	ds	2
   277  000037                     _level_init:
   278                           	callstack 0
   279  000037                     	ds	2
   280  000039                     _d:
   281                           	callstack 0
   282  000039                     	ds	1
   283  00003A                     _n:
   284                           	callstack 0
   285  00003A                     	ds	1
   286  00003B                     _E:
   287                           	callstack 0
   288  00003B                     	ds	1
   289  00003C                     _S:
   290                           	callstack 0
   291  00003C                     	ds	1
   292  00003D                     _O:
   293                           	callstack 0
   294  00003D                     	ds	1
   295  00003E                     _L:
   296                           	callstack 0
   297  00003E                     	ds	1
   298                           
   299                           	psect	cstackCOMRAM
   300  00003F                     __pcstackCOMRAM:
   301                           	callstack 0
   302  00003F                     ??_highPriorityISR:
   303  00003F                     
   304                           ; 2 bytes @ 0x0
   305  00003F                     	ds	1
   306  000040                     ??_lowPriorityISR:
   307                           
   308                           ; 1 bytes @ 0x1
   309  000040                     	ds	1
   310  000041                     ??_compare_results:
   311  000041                     ??_read_tmr1:
   312  000041                     ?___lwmod:
   313                           	callstack 0
   314  000041                     DELAY_ms@ms_Count:
   315                           	callstack 0
   316  000041                     rightRotate@n:
   317                           	callstack 0
   318  000041                     ___lwmod@dividend:
   319                           	callstack 0
   320                           
   321                           ; 2 bytes @ 0x2
   322  000041                     	ds	2
   323  000043                     ??_rightRotate:
   324  000043                     DELAY_ms@i:
   325                           	callstack 0
   326  000043                     ___lwmod@divisor:
   327                           	callstack 0
   328                           
   329                           ; 2 bytes @ 0x4
   330  000043                     	ds	2
   331  000045                     ___lwmod@counter:
   332                           	callstack 0
   333  000045                     DELAY_ms@j:
   334                           	callstack 0
   335                           
   336                           ; 2 bytes @ 0x6
   337  000045                     	ds	1
   338  000046                     ??_note_generate_task:
   339                           
   340                           ; 1 bytes @ 0x7
   341  000046                     	ds	1
   342  000047                     ??_display_task:
   343                           
   344                           ; 1 bytes @ 0x8
   345  000047                     	ds	2
   346  000049                     
   347                           ; 1 bytes @ 0xA
   348 ;;
   349 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   350 ;;
   351 ;; *************** function _main *****************
   352 ;; Defined at:
   353 ;;		line 511 in file "hw2_1.c"
   354 ;; Parameters:    Size  Location     Type
   355 ;;		None
   356 ;; Auto vars:     Size  Location     Type
   357 ;;		None
   358 ;; Return value:  Size  Location     Type
   359 ;;                  2  276[None  ] int 
   360 ;; Registers used:
   361 ;;		wreg, status,2, status,0, cstack
   362 ;; Tracked objects:
   363 ;;		On entry : 0/0
   364 ;;		On exit  : 0/0
   365 ;;		Unchanged: 0/0
   366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   371 ;;Total ram usage:        0 bytes
   372 ;; Hardware stack levels required when called:    6
   373 ;; This function calls:
   374 ;;		_check_rc0
   375 ;;		_display_task
   376 ;;		_init_all
   377 ;;		_input_task
   378 ;;		_note_generate_task
   379 ;;		_set_timer_task
   380 ;; This function is called by:
   381 ;;		Startup code after reset
   382 ;; This function uses a non-reentrant model
   383 ;;
   384                           
   385                           	psect	text0
   386  00093A                     __ptext0:
   387                           	callstack 0
   388  00093A                     _main:
   389                           	callstack 25
   390  00093A                     
   391                           ;hw2_1.c: 512:     init_all();
   392  00093A  EC60  F006         	call	_init_all	;wreg free
   393  00093E                     l1931:
   394                           
   395                           ;hw2_1.c: 515:         check_rc0();
   396  00093E  EC45  F005         	call	_check_rc0	;wreg free
   397  000942                     
   398                           ;hw2_1.c: 516:         if(start_flag == 1){
   399  000942  0409               	decf	_start_flag^0,w,c
   400  000944  100A               	iorwf	(_start_flag+1)^0,w,c
   401  000946  A4D8               	btfss	status,2,c
   402  000948  EFA8  F004         	goto	u1131
   403  00094C  EFAA  F004         	goto	u1130
   404  000950                     u1131:
   405  000950  EFD1  F004         	goto	l1941
   406  000954                     u1130:
   407  000954                     
   408                           ;hw2_1.c: 517:             set_timer_task();
   409  000954  EC9E  F002         	call	_set_timer_task	;wreg free
   410                           
   411                           ;hw2_1.c: 518:             note_generate_task();
   412  000958  ECAC  F003         	call	_note_generate_task	;wreg free
   413                           
   414                           ;hw2_1.c: 519:             input_task();
   415  00095C  ECDB  F004         	call	_input_task	;wreg free
   416                           
   417                           ;hw2_1.c: 520:             display_task();
   418  000960  EC15  F000         	call	_display_task	;wreg free
   419  000964                     
   420                           ;hw2_1.c: 521:             if (health <= 0){
   421  000964  BE4A               	btfsc	(_health+1)^0,7,c
   422  000966  EFBF  F004         	goto	u1140
   423  00096A  504A               	movf	(_health+1)^0,w,c
   424  00096C  E106               	bnz	u1141
   425  00096E  0449               	decf	_health^0,w,c
   426  000970  B0D8               	btfsc	status,0,c
   427  000972  EFBD  F004         	goto	u1141
   428  000976  EFBF  F004         	goto	u1140
   429  00097A                     u1141:
   430  00097A  EF9F  F004         	goto	l1931
   431  00097E                     u1140:
   432  00097E                     
   433                           ;hw2_1.c: 522:                 start_flag = 0;
   434  00097E  0E00               	movlw	0
   435  000980  6E0A               	movwf	(_start_flag+1)^0,c
   436  000982  0E00               	movlw	0
   437  000984  6E09               	movwf	_start_flag^0,c
   438                           
   439                           ;hw2_1.c: 523:                 LATA = 0x00;
   440  000986  0E00               	movlw	0
   441  000988  6E89               	movwf	137,c	;volatile
   442                           
   443                           ;hw2_1.c: 524:                 LATB = 0x00;
   444  00098A  0E00               	movlw	0
   445  00098C  6E8A               	movwf	138,c	;volatile
   446                           
   447                           ;hw2_1.c: 525:                 LATC = 0x00;
   448  00098E  0E00               	movlw	0
   449  000990  6E8B               	movwf	139,c	;volatile
   450                           
   451                           ;hw2_1.c: 526:                 LATD = 0x00;
   452  000992  0E00               	movlw	0
   453  000994  6E8C               	movwf	140,c	;volatile
   454                           
   455                           ;hw2_1.c: 527:                 LATE = 0x00;
   456  000996  0E00               	movlw	0
   457  000998  6E8D               	movwf	141,c	;volatile
   458                           
   459                           ;hw2_1.c: 528:                 LATF = 0x00;
   460  00099A  0E00               	movlw	0
   461  00099C  6E8E               	movwf	142,c	;volatile
   462  00099E  EF9F  F004         	goto	l1931
   463  0009A2                     l1941:
   464                           
   465                           ;hw2_1.c: 532:             display_task();
   466  0009A2  EC15  F000         	call	_display_task	;wreg free
   467  0009A6                     
   468                           ;hw2_1.c: 533:             TRISC = 0x01;
   469  0009A6  0E01               	movlw	1
   470  0009A8  6E94               	movwf	148,c	;volatile
   471  0009AA                     
   472                           ;hw2_1.c: 534:             PORTC = 0x00;
   473  0009AA  0E00               	movlw	0
   474  0009AC  6E82               	movwf	130,c	;volatile
   475  0009AE  EF9F  F004         	goto	l1931
   476  0009B2  EF13  F000         	goto	start
   477  0009B6                     __end_of_main:
   478                           	callstack 0
   479                           
   480 ;; *************** function _set_timer_task *****************
   481 ;; Defined at:
   482 ;;		line 148 in file "hw2_1.c"
   483 ;; Parameters:    Size  Location     Type
   484 ;;		None
   485 ;; Auto vars:     Size  Location     Type
   486 ;;		None
   487 ;; Return value:  Size  Location     Type
   488 ;;                  1    wreg      void 
   489 ;; Registers used:
   490 ;;		wreg, status,2, status,0
   491 ;; Tracked objects:
   492 ;;		On entry : 0/0
   493 ;;		On exit  : 0/0
   494 ;;		Unchanged: 0/0
   495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   500 ;;Total ram usage:        0 bytes
   501 ;; Hardware stack levels used:    1
   502 ;; Hardware stack levels required when called:    4
   503 ;; This function calls:
   504 ;;		Nothing
   505 ;; This function is called by:
   506 ;;		_main
   507 ;; This function uses a non-reentrant model
   508 ;;
   509                           
   510                           	psect	text1
   511  00053C                     __ptext1:
   512                           	callstack 0
   513  00053C                     _set_timer_task:
   514                           	callstack 26
   515  00053C                     
   516                           ;hw2_1.c: 149:     if(level == 1){
   517  00053C  0425               	decf	_level^0,w,c
   518  00053E  1026               	iorwf	(_level+1)^0,w,c
   519  000540  A4D8               	btfss	status,2,c
   520  000542  EFA5  F002         	goto	u91
   521  000546  EFA7  F002         	goto	u90
   522  00054A                     u91:
   523  00054A  EFDA  F002         	goto	l1051
   524  00054E                     u90:
   525  00054E                     
   526                           ;hw2_1.c: 150:             if(note_count == 0){
   527  00054E  5023               	movf	_note_count^0,w,c
   528  000550  1024               	iorwf	(_note_count+1)^0,w,c
   529  000552  A4D8               	btfss	status,2,c
   530  000554  EFAE  F002         	goto	u101
   531  000558  EFB0  F002         	goto	u100
   532  00055C                     u101:
   533  00055C  EFB4  F002         	goto	l174
   534  000560                     u100:
   535  000560                     
   536                           ;hw2_1.c: 151:                 wait=1;
   537  000560  0E00               	movlw	0
   538  000562  6E1C               	movwf	(_wait+1)^0,c
   539  000564  0E01               	movlw	1
   540  000566  6E1B               	movwf	_wait^0,c
   541  000568                     l174:
   542                           
   543                           ;hw2_1.c: 153:             if(LATF == 0x00 && LATA == 0x00 && wait == 1 && note_count ==
      +                           0){
   544  000568  508E               	movf	142,w,c	;volatile
   545  00056A  A4D8               	btfss	status,2,c
   546  00056C  EFBA  F002         	goto	u111
   547  000570  EFBC  F002         	goto	u110
   548  000574                     u111:
   549  000574  EFDA  F002         	goto	l1051
   550  000578                     u110:
   551  000578  5089               	movf	137,w,c	;volatile
   552  00057A  A4D8               	btfss	status,2,c
   553  00057C  EFC2  F002         	goto	u121
   554  000580  EFC4  F002         	goto	u120
   555  000584                     u121:
   556  000584  EFDA  F002         	goto	l1051
   557  000588                     u120:
   558  000588  041B               	decf	_wait^0,w,c
   559  00058A  101C               	iorwf	(_wait+1)^0,w,c
   560  00058C  A4D8               	btfss	status,2,c
   561  00058E  EFCB  F002         	goto	u131
   562  000592  EFCD  F002         	goto	u130
   563  000596                     u131:
   564  000596  EFDA  F002         	goto	l1051
   565  00059A                     u130:
   566  00059A  5023               	movf	_note_count^0,w,c
   567  00059C  1024               	iorwf	(_note_count+1)^0,w,c
   568  00059E  A4D8               	btfss	status,2,c
   569  0005A0  EFD4  F002         	goto	u141
   570  0005A4  EFD6  F002         	goto	u140
   571  0005A8                     u141:
   572  0005A8  EFDA  F002         	goto	l1051
   573  0005AC                     u140:
   574  0005AC                     
   575                           ;hw2_1.c: 154:               level = 2;}
   576  0005AC  0E00               	movlw	0
   577  0005AE  6E26               	movwf	(_level+1)^0,c
   578  0005B0  0E02               	movlw	2
   579  0005B2  6E25               	movwf	_level^0,c
   580  0005B4                     l1051:
   581                           
   582                           ;hw2_1.c: 156:         if (level == 2){
   583  0005B4  0E02               	movlw	2
   584  0005B6  1825               	xorwf	_level^0,w,c
   585  0005B8  1026               	iorwf	(_level+1)^0,w,c
   586  0005BA  A4D8               	btfss	status,2,c
   587  0005BC  EFE2  F002         	goto	u151
   588  0005C0  EFE4  F002         	goto	u150
   589  0005C4                     u151:
   590  0005C4  EF56  F003         	goto	l1077
   591  0005C8                     u150:
   592  0005C8                     
   593                           ;hw2_1.c: 157:             if(LATF == 0x00 && LATA == 0x00 && l2_over == 1 && note_count
      +                           == 0){
   594  0005C8  508E               	movf	142,w,c	;volatile
   595  0005CA  A4D8               	btfss	status,2,c
   596  0005CC  EFEA  F002         	goto	u161
   597  0005D0  EFEC  F002         	goto	u160
   598  0005D4                     u161:
   599  0005D4  EF0A  F003         	goto	l177
   600  0005D8                     u160:
   601  0005D8  5089               	movf	137,w,c	;volatile
   602  0005DA  A4D8               	btfss	status,2,c
   603  0005DC  EFF2  F002         	goto	u171
   604  0005E0  EFF4  F002         	goto	u170
   605  0005E4                     u171:
   606  0005E4  EF0A  F003         	goto	l177
   607  0005E8                     u170:
   608  0005E8  0403               	decf	_l2_over^0,w,c
   609  0005EA  1004               	iorwf	(_l2_over+1)^0,w,c
   610  0005EC  A4D8               	btfss	status,2,c
   611  0005EE  EFFB  F002         	goto	u181
   612  0005F2  EFFD  F002         	goto	u180
   613  0005F6                     u181:
   614  0005F6  EF0A  F003         	goto	l177
   615  0005FA                     u180:
   616  0005FA  5023               	movf	_note_count^0,w,c
   617  0005FC  1024               	iorwf	(_note_count+1)^0,w,c
   618  0005FE  A4D8               	btfss	status,2,c
   619  000600  EF04  F003         	goto	u191
   620  000604  EF06  F003         	goto	u190
   621  000608                     u191:
   622  000608  EF0A  F003         	goto	l177
   623  00060C                     u190:
   624  00060C                     
   625                           ;hw2_1.c: 158:               level = 3;
   626  00060C  0E00               	movlw	0
   627  00060E  6E26               	movwf	(_level+1)^0,c
   628  000610  0E03               	movlw	3
   629  000612  6E25               	movwf	_level^0,c
   630  000614                     l177:
   631                           
   632                           ;hw2_1.c: 160:             if(LATF == 0x00 && LATA == 0x00 && wait == 1 && l2_over == 0)
      +                          {
   633  000614  508E               	movf	142,w,c	;volatile
   634  000616  A4D8               	btfss	status,2,c
   635  000618  EF10  F003         	goto	u201
   636  00061C  EF12  F003         	goto	u200
   637  000620                     u201:
   638  000620  EF3C  F003         	goto	l1071
   639  000624                     u200:
   640  000624  5089               	movf	137,w,c	;volatile
   641  000626  A4D8               	btfss	status,2,c
   642  000628  EF18  F003         	goto	u211
   643  00062C  EF1A  F003         	goto	u210
   644  000630                     u211:
   645  000630  EF3C  F003         	goto	l1071
   646  000634                     u210:
   647  000634  041B               	decf	_wait^0,w,c
   648  000636  101C               	iorwf	(_wait+1)^0,w,c
   649  000638  A4D8               	btfss	status,2,c
   650  00063A  EF21  F003         	goto	u221
   651  00063E  EF23  F003         	goto	u220
   652  000642                     u221:
   653  000642  EF3C  F003         	goto	l1071
   654  000646                     u220:
   655  000646  5003               	movf	_l2_over^0,w,c
   656  000648  1004               	iorwf	(_l2_over+1)^0,w,c
   657  00064A  A4D8               	btfss	status,2,c
   658  00064C  EF2A  F003         	goto	u231
   659  000650  EF2C  F003         	goto	u230
   660  000654                     u231:
   661  000654  EF3C  F003         	goto	l1071
   662  000658                     u230:
   663  000658                     
   664                           ;hw2_1.c: 161:                 note_count = 10;
   665  000658  0E00               	movlw	0
   666  00065A  6E24               	movwf	(_note_count+1)^0,c
   667  00065C  0E0A               	movlw	10
   668  00065E  6E23               	movwf	_note_count^0,c
   669                           
   670                           ;hw2_1.c: 162:                 wait = 0;
   671  000660  0E00               	movlw	0
   672  000662  6E1C               	movwf	(_wait+1)^0,c
   673  000664  0E00               	movlw	0
   674  000666  6E1B               	movwf	_wait^0,c
   675                           
   676                           ;hw2_1.c: 163:                 level_init = 12;
   677  000668  0E00               	movlw	0
   678  00066A  6E38               	movwf	(_level_init+1)^0,c
   679  00066C  0E0C               	movlw	12
   680  00066E  6E37               	movwf	_level_init^0,c
   681                           
   682                           ;hw2_1.c: 164:                 count_cap = 127;
   683  000670  0E00               	movlw	0
   684  000672  6E36               	movwf	(_count_cap+1)^0,c
   685  000674  0E7F               	movlw	127
   686  000676  6E35               	movwf	_count_cap^0,c
   687  000678                     l1071:
   688                           
   689                           ;hw2_1.c: 166:             if( wait == 0 && note_count == 0){
   690  000678  501B               	movf	_wait^0,w,c
   691  00067A  101C               	iorwf	(_wait+1)^0,w,c
   692  00067C  A4D8               	btfss	status,2,c
   693  00067E  EF43  F003         	goto	u241
   694  000682  EF45  F003         	goto	u240
   695  000686                     u241:
   696  000686  EF56  F003         	goto	l1077
   697  00068A                     u240:
   698  00068A  5023               	movf	_note_count^0,w,c
   699  00068C  1024               	iorwf	(_note_count+1)^0,w,c
   700  00068E  A4D8               	btfss	status,2,c
   701  000690  EF4C  F003         	goto	u251
   702  000694  EF4E  F003         	goto	u250
   703  000698                     u251:
   704  000698  EF56  F003         	goto	l1077
   705  00069C                     u250:
   706  00069C                     
   707                           ;hw2_1.c: 167:                 wait = 1; l2_over = 1;}
   708  00069C  0E00               	movlw	0
   709  00069E  6E1C               	movwf	(_wait+1)^0,c
   710  0006A0  0E01               	movlw	1
   711  0006A2  6E1B               	movwf	_wait^0,c
   712  0006A4  0E00               	movlw	0
   713  0006A6  6E04               	movwf	(_l2_over+1)^0,c
   714  0006A8  0E01               	movlw	1
   715  0006AA  6E03               	movwf	_l2_over^0,c
   716  0006AC                     l1077:
   717                           
   718                           ;hw2_1.c: 169:         if (level == 3 ){
   719  0006AC  0E03               	movlw	3
   720  0006AE  1825               	xorwf	_level^0,w,c
   721  0006B0  1026               	iorwf	(_level+1)^0,w,c
   722  0006B2  A4D8               	btfss	status,2,c
   723  0006B4  EF5E  F003         	goto	u261
   724  0006B8  EF60  F003         	goto	u260
   725  0006BC                     u261:
   726  0006BC  EFAB  F003         	goto	l183
   727  0006C0                     u260:
   728  0006C0                     
   729                           ;hw2_1.c: 170:             if(LATF == 0x00 && LATA == 0x00 && wait == 1){
   730  0006C0  508E               	movf	142,w,c	;volatile
   731  0006C2  A4D8               	btfss	status,2,c
   732  0006C4  EF66  F003         	goto	u271
   733  0006C8  EF68  F003         	goto	u270
   734  0006CC                     u271:
   735  0006CC  EF85  F003         	goto	l1087
   736  0006D0                     u270:
   737  0006D0  5089               	movf	137,w,c	;volatile
   738  0006D2  A4D8               	btfss	status,2,c
   739  0006D4  EF6E  F003         	goto	u281
   740  0006D8  EF70  F003         	goto	u280
   741  0006DC                     u281:
   742  0006DC  EF85  F003         	goto	l1087
   743  0006E0                     u280:
   744  0006E0  041B               	decf	_wait^0,w,c
   745  0006E2  101C               	iorwf	(_wait+1)^0,w,c
   746  0006E4  A4D8               	btfss	status,2,c
   747  0006E6  EF77  F003         	goto	u291
   748  0006EA  EF79  F003         	goto	u290
   749  0006EE                     u291:
   750  0006EE  EF85  F003         	goto	l1087
   751  0006F2                     u290:
   752  0006F2                     
   753                           ;hw2_1.c: 171:                 note_count = 15;
   754  0006F2  0E00               	movlw	0
   755  0006F4  6E24               	movwf	(_note_count+1)^0,c
   756  0006F6  0E0F               	movlw	15
   757  0006F8  6E23               	movwf	_note_count^0,c
   758                           
   759                           ;hw2_1.c: 172:                 wait = 0;
   760  0006FA  0E00               	movlw	0
   761  0006FC  6E1C               	movwf	(_wait+1)^0,c
   762  0006FE  0E00               	movlw	0
   763  000700  6E1B               	movwf	_wait^0,c
   764                           
   765                           ;hw2_1.c: 173:                 level_init = 73;
   766  000702  0E00               	movlw	0
   767  000704  6E38               	movwf	(_level_init+1)^0,c
   768  000706  0E49               	movlw	73
   769  000708  6E37               	movwf	_level_init^0,c
   770  00070A                     l1087:
   771                           
   772                           ;hw2_1.c: 176:             if( wait == 0 && note_count == 0 && LATF == 0x00 && LATA == 0
      +                          x00){
   773  00070A  501B               	movf	_wait^0,w,c
   774  00070C  101C               	iorwf	(_wait+1)^0,w,c
   775  00070E  A4D8               	btfss	status,2,c
   776  000710  EF8C  F003         	goto	u301
   777  000714  EF8E  F003         	goto	u300
   778  000718                     u301:
   779  000718  EFAB  F003         	goto	l183
   780  00071C                     u300:
   781  00071C  5023               	movf	_note_count^0,w,c
   782  00071E  1024               	iorwf	(_note_count+1)^0,w,c
   783  000720  A4D8               	btfss	status,2,c
   784  000722  EF95  F003         	goto	u311
   785  000726  EF97  F003         	goto	u310
   786  00072A                     u311:
   787  00072A  EFAB  F003         	goto	l183
   788  00072E                     u310:
   789  00072E  508E               	movf	142,w,c	;volatile
   790  000730  A4D8               	btfss	status,2,c
   791  000732  EF9D  F003         	goto	u321
   792  000736  EF9F  F003         	goto	u320
   793  00073A                     u321:
   794  00073A  EFAB  F003         	goto	l183
   795  00073E                     u320:
   796  00073E  5089               	movf	137,w,c	;volatile
   797  000740  A4D8               	btfss	status,2,c
   798  000742  EFA5  F003         	goto	u331
   799  000746  EFA7  F003         	goto	u330
   800  00074A                     u331:
   801  00074A  EFAB  F003         	goto	l183
   802  00074E                     u330:
   803  00074E                     
   804                           ;hw2_1.c: 177:                health= -2;
   805  00074E  0EFF               	movlw	255
   806  000750  6E4A               	movwf	(_health+1)^0,c
   807  000752  0EFE               	movlw	254
   808  000754  6E49               	movwf	_health^0,c
   809  000756                     l183:
   810  000756  0012               	return		;funcret
   811  000758                     __end_of_set_timer_task:
   812                           	callstack 0
   813                           
   814 ;; *************** function _note_generate_task *****************
   815 ;; Defined at:
   816 ;;		line 228 in file "hw2_1.c"
   817 ;; Parameters:    Size  Location     Type
   818 ;;		None
   819 ;; Auto vars:     Size  Location     Type
   820 ;;		None
   821 ;; Return value:  Size  Location     Type
   822 ;;                  1    wreg      void 
   823 ;; Registers used:
   824 ;;		wreg, status,2, status,0, cstack
   825 ;; Tracked objects:
   826 ;;		On entry : 0/0
   827 ;;		On exit  : 0/0
   828 ;;		Unchanged: 0/0
   829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   832 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   833 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   834 ;;Total ram usage:        2 bytes
   835 ;; Hardware stack levels used:    1
   836 ;; Hardware stack levels required when called:    5
   837 ;; This function calls:
   838 ;;		___lwmod
   839 ;;		_rightRotate
   840 ;; This function is called by:
   841 ;;		_main
   842 ;; This function uses a non-reentrant model
   843 ;;
   844                           
   845                           	psect	text2
   846  000758                     __ptext2:
   847                           	callstack 0
   848  000758                     _note_generate_task:
   849                           	callstack 25
   850  000758                     
   851                           ;hw2_1.c: 229:     if(note_generate_flag){
   852  000758  500F               	movf	_note_generate_flag^0,w,c
   853  00075A  1010               	iorwf	(_note_generate_flag+1)^0,w,c
   854  00075C  B4D8               	btfsc	status,2,c
   855  00075E  EFB3  F003         	goto	u831
   856  000762  EFB5  F003         	goto	u830
   857  000766                     u831:
   858  000766  EF4B  F004         	goto	l217
   859  00076A                     u830:
   860  00076A                     
   861                           ;hw2_1.c: 230:         note_generate_flag = 0;
   862  00076A  0E00               	movlw	0
   863  00076C  6E10               	movwf	(_note_generate_flag+1)^0,c
   864  00076E  0E00               	movlw	0
   865  000770  6E0F               	movwf	_note_generate_flag^0,c
   866  000772                     
   867                           ;hw2_1.c: 231:             randomed = initial_timer1 & ander;
   868  000772  0E07               	movlw	7
   869  000774  1421               	andwf	_initial_timer1^0,w,c
   870  000776  6E17               	movwf	_randomed^0,c
   871  000778  6A18               	clrf	(_randomed+1)^0,c
   872  00077A                     
   873                           ;hw2_1.c: 232:             light = randomed % 5;
   874  00077A  C017  F041         	movff	_randomed,___lwmod@dividend
   875  00077E  C018  F042         	movff	_randomed+1,___lwmod@dividend+1
   876  000782  0E00               	movlw	0
   877  000784  6E44               	movwf	(___lwmod@divisor+1)^0,c
   878  000786  0E05               	movlw	5
   879  000788  6E43               	movwf	___lwmod@divisor^0,c
   880  00078A  EC13  F005         	call	___lwmod	;wreg free
   881  00078E  C041  F015         	movff	?___lwmod,_light
   882  000792  C042  F016         	movff	?___lwmod+1,_light+1
   883                           
   884                           ;hw2_1.c: 233:             switch(light){
   885  000796  EFEB  F003         	goto	l1599
   886  00079A                     l1587:
   887                           
   888                           ;hw2_1.c: 235:                     RA = 1;
   889  00079A  0E00               	movlw	0
   890  00079C  6E0E               	movwf	(_RA+1)^0,c
   891  00079E  0E01               	movlw	1
   892  0007A0  6E0D               	movwf	_RA^0,c
   893                           
   894                           ;hw2_1.c: 236:                     break;
   895  0007A2  EF0D  F004         	goto	l1601
   896  0007A6                     l1589:
   897                           
   898                           ;hw2_1.c: 238:                     RA = 0x02;
   899  0007A6  0E00               	movlw	0
   900  0007A8  6E0E               	movwf	(_RA+1)^0,c
   901  0007AA  0E02               	movlw	2
   902  0007AC  6E0D               	movwf	_RA^0,c
   903                           
   904                           ;hw2_1.c: 240:                     break;
   905  0007AE  EF0D  F004         	goto	l1601
   906  0007B2                     l1591:
   907                           
   908                           ;hw2_1.c: 242:                     RA= 0x04;
   909  0007B2  0E00               	movlw	0
   910  0007B4  6E0E               	movwf	(_RA+1)^0,c
   911  0007B6  0E04               	movlw	4
   912  0007B8  6E0D               	movwf	_RA^0,c
   913                           
   914                           ;hw2_1.c: 244:                     break;
   915  0007BA  EF0D  F004         	goto	l1601
   916  0007BE                     l1593:
   917                           
   918                           ;hw2_1.c: 246:                     RA= 0x08;
   919  0007BE  0E00               	movlw	0
   920  0007C0  6E0E               	movwf	(_RA+1)^0,c
   921  0007C2  0E08               	movlw	8
   922  0007C4  6E0D               	movwf	_RA^0,c
   923                           
   924                           ;hw2_1.c: 248:                     break;
   925  0007C6  EF0D  F004         	goto	l1601
   926  0007CA                     l1595:
   927                           
   928                           ;hw2_1.c: 250:                     RA = 0x10;
   929  0007CA  0E00               	movlw	0
   930  0007CC  6E0E               	movwf	(_RA+1)^0,c
   931  0007CE  0E10               	movlw	16
   932  0007D0  6E0D               	movwf	_RA^0,c
   933                           
   934                           ;hw2_1.c: 252:                     break;
   935  0007D2  EF0D  F004         	goto	l1601
   936  0007D6                     l1599:
   937  0007D6  C015  F046         	movff	_light,??_note_generate_task
   938  0007DA  C016  F047         	movff	_light+1,??_note_generate_task+1
   939                           
   940                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   941                           ; Switch size 1, requested type "simple"
   942                           ; Number of cases is 1, Range of values is 0 to 0
   943                           ; switch strategies available:
   944                           ; Name         Instructions Cycles
   945                           ; simple_byte            4     3 (average)
   946                           ;	Chosen strategy is simple_byte
   947  0007DE  5047               	movf	(??_note_generate_task+1)^0,w,c
   948  0007E0  0A00               	xorlw	0	; case 0
   949  0007E2  B4D8               	btfsc	status,2,c
   950  0007E4  EFF6  F003         	goto	l1959
   951  0007E8  EF0D  F004         	goto	l1601
   952  0007EC                     l1959:
   953                           
   954                           ; Switch size 1, requested type "simple"
   955                           ; Number of cases is 5, Range of values is 0 to 4
   956                           ; switch strategies available:
   957                           ; Name         Instructions Cycles
   958                           ; simple_byte           16     9 (average)
   959                           ;	Chosen strategy is simple_byte
   960  0007EC  5046               	movf	??_note_generate_task^0,w,c
   961  0007EE  0A00               	xorlw	0	; case 0
   962  0007F0  B4D8               	btfsc	status,2,c
   963  0007F2  EFCD  F003         	goto	l1587
   964  0007F6  0A01               	xorlw	1	; case 1
   965  0007F8  B4D8               	btfsc	status,2,c
   966  0007FA  EFD3  F003         	goto	l1589
   967  0007FE  0A03               	xorlw	3	; case 2
   968  000800  B4D8               	btfsc	status,2,c
   969  000802  EFD9  F003         	goto	l1591
   970  000806  0A01               	xorlw	1	; case 3
   971  000808  B4D8               	btfsc	status,2,c
   972  00080A  EFDF  F003         	goto	l1593
   973  00080E  0A07               	xorlw	7	; case 4
   974  000810  B4D8               	btfsc	status,2,c
   975  000812  EFE5  F003         	goto	l1595
   976  000816  EF0D  F004         	goto	l1601
   977  00081A                     l1601:
   978                           
   979                           ;hw2_1.c: 254:             rightRotate(initial_timer1);
   980  00081A  C021  F041         	movff	_initial_timer1,rightRotate@n
   981  00081E  C022  F042         	movff	_initial_timer1+1,rightRotate@n+1
   982  000822  ECC0  F005         	call	_rightRotate	;wreg free
   983  000826                     
   984                           ;hw2_1.c: 255:             if(level == 2){rightRotate(initial_timer1);rightRotate(initia
      +                          l_timer1);}
   985  000826  0E02               	movlw	2
   986  000828  1825               	xorwf	_level^0,w,c
   987  00082A  1026               	iorwf	(_level+1)^0,w,c
   988  00082C  A4D8               	btfss	status,2,c
   989  00082E  EF1B  F004         	goto	u841
   990  000832  EF1D  F004         	goto	u840
   991  000836                     u841:
   992  000836  EF29  F004         	goto	l1607
   993  00083A                     u840:
   994  00083A  C021  F041         	movff	_initial_timer1,rightRotate@n
   995  00083E  C022  F042         	movff	_initial_timer1+1,rightRotate@n+1
   996  000842  ECC0  F005         	call	_rightRotate	;wreg free
   997  000846  C021  F041         	movff	_initial_timer1,rightRotate@n
   998  00084A  C022  F042         	movff	_initial_timer1+1,rightRotate@n+1
   999  00084E  ECC0  F005         	call	_rightRotate	;wreg free
  1000  000852                     l1607:
  1001                           
  1002                           ;hw2_1.c: 256:             if(level == 3){rightRotate(initial_timer1);rightRotate(initia
      +                          l_timer1);rightRotate(initial_timer1);rightRotate(initial_timer1);}
  1003  000852  0E03               	movlw	3
  1004  000854  1825               	xorwf	_level^0,w,c
  1005  000856  1026               	iorwf	(_level+1)^0,w,c
  1006  000858  A4D8               	btfss	status,2,c
  1007  00085A  EF31  F004         	goto	u851
  1008  00085E  EF33  F004         	goto	u850
  1009  000862                     u851:
  1010  000862  EF4B  F004         	goto	l217
  1011  000866                     u850:
  1012  000866  C021  F041         	movff	_initial_timer1,rightRotate@n
  1013  00086A  C022  F042         	movff	_initial_timer1+1,rightRotate@n+1
  1014  00086E  ECC0  F005         	call	_rightRotate	;wreg free
  1015  000872  C021  F041         	movff	_initial_timer1,rightRotate@n
  1016  000876  C022  F042         	movff	_initial_timer1+1,rightRotate@n+1
  1017  00087A  ECC0  F005         	call	_rightRotate	;wreg free
  1018  00087E  C021  F041         	movff	_initial_timer1,rightRotate@n
  1019  000882  C022  F042         	movff	_initial_timer1+1,rightRotate@n+1
  1020  000886  ECC0  F005         	call	_rightRotate	;wreg free
  1021  00088A  C021  F041         	movff	_initial_timer1,rightRotate@n
  1022  00088E  C022  F042         	movff	_initial_timer1+1,rightRotate@n+1
  1023  000892  ECC0  F005         	call	_rightRotate	;wreg free
  1024  000896                     l217:
  1025  000896  0012               	return		;funcret
  1026  000898                     __end_of_note_generate_task:
  1027                           	callstack 0
  1028                           
  1029 ;; *************** function _rightRotate *****************
  1030 ;; Defined at:
  1031 ;;		line 210 in file "hw2_1.c"
  1032 ;; Parameters:    Size  Location     Type
  1033 ;;  n               2    2[COMRAM] unsigned int 
  1034 ;; Auto vars:     Size  Location     Type
  1035 ;;		None
  1036 ;; Return value:  Size  Location     Type
  1037 ;;                  1    wreg      void 
  1038 ;; Registers used:
  1039 ;;		wreg, status,2, status,0
  1040 ;; Tracked objects:
  1041 ;;		On entry : 0/0
  1042 ;;		On exit  : 0/0
  1043 ;;		Unchanged: 0/0
  1044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1045 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1047 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1048 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1049 ;;Total ram usage:        4 bytes
  1050 ;; Hardware stack levels used:    1
  1051 ;; Hardware stack levels required when called:    4
  1052 ;; This function calls:
  1053 ;;		Nothing
  1054 ;; This function is called by:
  1055 ;;		_note_generate_task
  1056 ;; This function uses a non-reentrant model
  1057 ;;
  1058                           
  1059                           	psect	text3
  1060  000B80                     __ptext3:
  1061                           	callstack 0
  1062  000B80                     _rightRotate:
  1063                           	callstack 25
  1064  000B80                     
  1065                           ;hw2_1.c: 210: void rightRotate(unsigned int n);hw2_1.c: 211: {;hw2_1.c: 212:     if(n%2
      +                          ==1){
  1066  000B80  A041               	btfss	rightRotate@n^0,0,c
  1067  000B82  EFC5  F005         	goto	u791
  1068  000B86  EFC7  F005         	goto	u790
  1069  000B8A                     u791:
  1070  000B8A  EFD4  F005         	goto	l1561
  1071  000B8E                     u790:
  1072  000B8E                     
  1073                           ;hw2_1.c: 213:        initial_timer1 = (n / 2)+ 0x8000;
  1074  000B8E  90D8               	bcf	status,0,c
  1075  000B90  3042               	rrcf	(rightRotate@n+1)^0,w,c
  1076  000B92  6E44               	movwf	(??_rightRotate+1)^0,c
  1077  000B94  3041               	rrcf	rightRotate@n^0,w,c
  1078  000B96  6E43               	movwf	??_rightRotate^0,c
  1079  000B98  0E00               	movlw	0
  1080  000B9A  2443               	addwf	??_rightRotate^0,w,c
  1081  000B9C  6E21               	movwf	_initial_timer1^0,c
  1082  000B9E  0E80               	movlw	128
  1083  000BA0  2044               	addwfc	(??_rightRotate+1)^0,w,c
  1084  000BA2  6E22               	movwf	(_initial_timer1+1)^0,c
  1085                           
  1086                           ;hw2_1.c: 214:     }
  1087  000BA4  EFDB  F005         	goto	l201
  1088  000BA8                     l1561:
  1089                           
  1090                           ;hw2_1.c: 216:        initial_timer1 = n / 2;
  1091  000BA8  90D8               	bcf	status,0,c
  1092  000BAA  3042               	rrcf	(rightRotate@n+1)^0,w,c
  1093  000BAC  6E43               	movwf	??_rightRotate^0,c
  1094  000BAE  3041               	rrcf	rightRotate@n^0,w,c
  1095  000BB0  6E21               	movwf	_initial_timer1^0,c
  1096  000BB2  C043  F022         	movff	??_rightRotate,_initial_timer1+1
  1097  000BB6                     l201:
  1098  000BB6  0012               	return		;funcret
  1099  000BB8                     __end_of_rightRotate:
  1100                           	callstack 0
  1101                           
  1102 ;; *************** function ___lwmod *****************
  1103 ;; Defined at:
  1104 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\lwmod.c"
  1105 ;; Parameters:    Size  Location     Type
  1106 ;;  dividend        2    2[COMRAM] unsigned int 
  1107 ;;  divisor         2    4[COMRAM] unsigned int 
  1108 ;; Auto vars:     Size  Location     Type
  1109 ;;  counter         1    6[COMRAM] unsigned char 
  1110 ;; Return value:  Size  Location     Type
  1111 ;;                  2    2[COMRAM] unsigned int 
  1112 ;; Registers used:
  1113 ;;		wreg, status,2, status,0
  1114 ;; Tracked objects:
  1115 ;;		On entry : 0/0
  1116 ;;		On exit  : 0/0
  1117 ;;		Unchanged: 0/0
  1118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1119 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1120 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1122 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1123 ;;Total ram usage:        5 bytes
  1124 ;; Hardware stack levels used:    1
  1125 ;; Hardware stack levels required when called:    4
  1126 ;; This function calls:
  1127 ;;		Nothing
  1128 ;; This function is called by:
  1129 ;;		_note_generate_task
  1130 ;; This function uses a non-reentrant model
  1131 ;;
  1132                           
  1133                           	psect	text4
  1134  000A26                     __ptext4:
  1135                           	callstack 0
  1136  000A26                     ___lwmod:
  1137                           	callstack 25
  1138  000A26  5043               	movf	___lwmod@divisor^0,w,c
  1139  000A28  1044               	iorwf	(___lwmod@divisor+1)^0,w,c
  1140  000A2A  B4D8               	btfsc	status,2,c
  1141  000A2C  EF1A  F005         	goto	u801
  1142  000A30  EF1C  F005         	goto	u800
  1143  000A34                     u801:
  1144  000A34  EF40  F005         	goto	l787
  1145  000A38                     u800:
  1146  000A38  0E01               	movlw	1
  1147  000A3A  6E45               	movwf	___lwmod@counter^0,c
  1148  000A3C  EF24  F005         	goto	l1569
  1149  000A40                     l1567:
  1150  000A40  90D8               	bcf	status,0,c
  1151  000A42  3643               	rlcf	___lwmod@divisor^0,f,c
  1152  000A44  3644               	rlcf	(___lwmod@divisor+1)^0,f,c
  1153  000A46  2A45               	incf	___lwmod@counter^0,f,c
  1154  000A48                     l1569:
  1155  000A48  AE44               	btfss	(___lwmod@divisor+1)^0,7,c
  1156  000A4A  EF29  F005         	goto	u811
  1157  000A4E  EF2B  F005         	goto	u810
  1158  000A52                     u811:
  1159  000A52  EF20  F005         	goto	l1567
  1160  000A56                     u810:
  1161  000A56                     l1571:
  1162  000A56  5043               	movf	___lwmod@divisor^0,w,c
  1163  000A58  5C41               	subwf	___lwmod@dividend^0,w,c
  1164  000A5A  5044               	movf	(___lwmod@divisor+1)^0,w,c
  1165  000A5C  5842               	subwfb	(___lwmod@dividend+1)^0,w,c
  1166  000A5E  A0D8               	btfss	status,0,c
  1167  000A60  EF34  F005         	goto	u821
  1168  000A64  EF36  F005         	goto	u820
  1169  000A68                     u821:
  1170  000A68  EF3A  F005         	goto	l1575
  1171  000A6C                     u820:
  1172  000A6C  5043               	movf	___lwmod@divisor^0,w,c
  1173  000A6E  5E41               	subwf	___lwmod@dividend^0,f,c
  1174  000A70  5044               	movf	(___lwmod@divisor+1)^0,w,c
  1175  000A72  5A42               	subwfb	(___lwmod@dividend+1)^0,f,c
  1176  000A74                     l1575:
  1177  000A74  90D8               	bcf	status,0,c
  1178  000A76  3244               	rrcf	(___lwmod@divisor+1)^0,f,c
  1179  000A78  3243               	rrcf	___lwmod@divisor^0,f,c
  1180  000A7A  2E45               	decfsz	___lwmod@counter^0,f,c
  1181  000A7C  EF2B  F005         	goto	l1571
  1182  000A80                     l787:
  1183  000A80  C041  F041         	movff	___lwmod@dividend,?___lwmod
  1184  000A84  C042  F042         	movff	___lwmod@dividend+1,?___lwmod+1
  1185  000A88  0012               	return		;funcret
  1186  000A8A                     __end_of___lwmod:
  1187                           	callstack 0
  1188                           
  1189 ;; *************** function _input_task *****************
  1190 ;; Defined at:
  1191 ;;		line 195 in file "hw2_1.c"
  1192 ;; Parameters:    Size  Location     Type
  1193 ;;		None
  1194 ;; Auto vars:     Size  Location     Type
  1195 ;;		None
  1196 ;; Return value:  Size  Location     Type
  1197 ;;                  1    wreg      void 
  1198 ;; Registers used:
  1199 ;;		wreg, status,2, status,0, cstack
  1200 ;; Tracked objects:
  1201 ;;		On entry : 0/0
  1202 ;;		On exit  : 0/0
  1203 ;;		Unchanged: 0/0
  1204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1209 ;;Total ram usage:        0 bytes
  1210 ;; Hardware stack levels used:    1
  1211 ;; Hardware stack levels required when called:    5
  1212 ;; This function calls:
  1213 ;;		_compare_results
  1214 ;; This function is called by:
  1215 ;;		_main
  1216 ;; This function uses a non-reentrant model
  1217 ;;
  1218                           
  1219                           	psect	text5
  1220  0009B6                     __ptext5:
  1221                           	callstack 0
  1222  0009B6                     _input_task:
  1223                           	callstack 25
  1224  0009B6                     
  1225                           ;hw2_1.c: 196:     if(PORTG != 0x00){
  1226  0009B6  5086               	movf	134,w,c	;volatile
  1227  0009B8  B4D8               	btfsc	status,2,c
  1228  0009BA  EFE1  F004         	goto	u341
  1229  0009BE  EFE3  F004         	goto	u340
  1230  0009C2                     u341:
  1231  0009C2  EF12  F005         	goto	l194
  1232  0009C6                     u340:
  1233  0009C6                     
  1234                           ;hw2_1.c: 197:         input_G = PORTG;
  1235  0009C6  CF86 F011          	movff	3974,_input_G	;volatile
  1236  0009CA  6A12               	clrf	(_input_G+1)^0,c
  1237  0009CC                     
  1238                           ;hw2_1.c: 198:         if(input_compare_flag){
  1239  0009CC  5013               	movf	_input_compare_flag^0,w,c
  1240  0009CE  1014               	iorwf	(_input_compare_flag+1)^0,w,c
  1241  0009D0  B4D8               	btfsc	status,2,c
  1242  0009D2  EFED  F004         	goto	u351
  1243  0009D6  EFEF  F004         	goto	u350
  1244  0009DA                     u351:
  1245  0009DA  EF12  F005         	goto	l194
  1246  0009DE                     u350:
  1247  0009DE                     
  1248                           ;hw2_1.c: 199:             compare_results();
  1249  0009DE  ECF7  F005         	call	_compare_results	;wreg free
  1250  0009E2                     
  1251                           ;hw2_1.c: 200:             if(decrease_health_flag && health > 0){
  1252  0009E2  500B               	movf	_decrease_health_flag^0,w,c
  1253  0009E4  100C               	iorwf	(_decrease_health_flag+1)^0,w,c
  1254  0009E6  B4D8               	btfsc	status,2,c
  1255  0009E8  EFF8  F004         	goto	u361
  1256  0009EC  EFFA  F004         	goto	u360
  1257  0009F0                     u361:
  1258  0009F0  EF0E  F005         	goto	l1113
  1259  0009F4                     u360:
  1260  0009F4  BE4A               	btfsc	(_health+1)^0,7,c
  1261  0009F6  EF05  F005         	goto	u371
  1262  0009FA  504A               	movf	(_health+1)^0,w,c
  1263  0009FC  E108               	bnz	u370
  1264  0009FE  0449               	decf	_health^0,w,c
  1265  000A00  A0D8               	btfss	status,0,c
  1266  000A02  EF05  F005         	goto	u371
  1267  000A06  EF07  F005         	goto	u370
  1268  000A0A                     u371:
  1269  000A0A  EF0E  F005         	goto	l1113
  1270  000A0E                     u370:
  1271  000A0E                     
  1272                           ;hw2_1.c: 201:                 health -=1;
  1273  000A0E  0649               	decf	_health^0,f,c
  1274  000A10  A0D8               	btfss	status,0,c
  1275  000A12  064A               	decf	(_health+1)^0,f,c
  1276  000A14                     
  1277                           ;hw2_1.c: 202:                 decrease_health_flag = 0;
  1278  000A14  0E00               	movlw	0
  1279  000A16  6E0C               	movwf	(_decrease_health_flag+1)^0,c
  1280  000A18  0E00               	movlw	0
  1281  000A1A  6E0B               	movwf	_decrease_health_flag^0,c
  1282  000A1C                     l1113:
  1283                           
  1284                           ;hw2_1.c: 204:         input_compare_flag = 0;
  1285  000A1C  0E00               	movlw	0
  1286  000A1E  6E14               	movwf	(_input_compare_flag+1)^0,c
  1287  000A20  0E00               	movlw	0
  1288  000A22  6E13               	movwf	_input_compare_flag^0,c
  1289  000A24                     l194:
  1290  000A24  0012               	return		;funcret
  1291  000A26                     __end_of_input_task:
  1292                           	callstack 0
  1293                           
  1294 ;; *************** function _compare_results *****************
  1295 ;; Defined at:
  1296 ;;		line 186 in file "hw2_1.c"
  1297 ;; Parameters:    Size  Location     Type
  1298 ;;		None
  1299 ;; Auto vars:     Size  Location     Type
  1300 ;;		None
  1301 ;; Return value:  Size  Location     Type
  1302 ;;                  1    wreg      void 
  1303 ;; Registers used:
  1304 ;;		wreg, status,2, status,0
  1305 ;; Tracked objects:
  1306 ;;		On entry : 0/0
  1307 ;;		On exit  : 0/0
  1308 ;;		Unchanged: 0/0
  1309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1312 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1313 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1314 ;;Total ram usage:        2 bytes
  1315 ;; Hardware stack levels used:    1
  1316 ;; Hardware stack levels required when called:    4
  1317 ;; This function calls:
  1318 ;;		Nothing
  1319 ;; This function is called by:
  1320 ;;		_input_task
  1321 ;; This function uses a non-reentrant model
  1322 ;;
  1323                           
  1324                           	psect	text6
  1325  000BEE                     __ptext6:
  1326                           	callstack 0
  1327  000BEE                     _compare_results:
  1328                           	callstack 25
  1329  000BEE                     
  1330                           ;hw2_1.c: 187:     if((input_G ^ LATF) == 0x00){
  1331  000BEE  508E               	movf	142,w,c	;volatile
  1332  000BF0  1811               	xorwf	_input_G^0,w,c
  1333  000BF2  6E41               	movwf	??_compare_results^0,c
  1334  000BF4  0E00               	movlw	0
  1335  000BF6  1812               	xorwf	(_input_G+1)^0,w,c
  1336  000BF8  6E42               	movwf	(??_compare_results+1)^0,c
  1337  000BFA  5041               	movf	??_compare_results^0,w,c
  1338  000BFC  1042               	iorwf	(??_compare_results+1)^0,w,c
  1339  000BFE  A4D8               	btfss	status,2,c
  1340  000C00  EF04  F006         	goto	u31
  1341  000C04  EF06  F006         	goto	u30
  1342  000C08                     u31:
  1343  000C08  EF0C  F006         	goto	l991
  1344  000C0C                     u30:
  1345  000C0C                     
  1346                           ;hw2_1.c: 188:         decrease_health_flag = 0;
  1347  000C0C  0E00               	movlw	0
  1348  000C0E  6E0C               	movwf	(_decrease_health_flag+1)^0,c
  1349  000C10  0E00               	movlw	0
  1350  000C12  6E0B               	movwf	_decrease_health_flag^0,c
  1351                           
  1352                           ;hw2_1.c: 190:     }
  1353  000C14  EF10  F006         	goto	l188
  1354  000C18                     l991:
  1355                           
  1356                           ;hw2_1.c: 192:         decrease_health_flag = 1;
  1357  000C18  0E00               	movlw	0
  1358  000C1A  6E0C               	movwf	(_decrease_health_flag+1)^0,c
  1359  000C1C  0E01               	movlw	1
  1360  000C1E  6E0B               	movwf	_decrease_health_flag^0,c
  1361  000C20                     l188:
  1362  000C20  0012               	return		;funcret
  1363  000C22                     __end_of_compare_results:
  1364                           	callstack 0
  1365                           
  1366 ;; *************** function _init_all *****************
  1367 ;; Defined at:
  1368 ;;		line 503 in file "hw2_1.c"
  1369 ;; Parameters:    Size  Location     Type
  1370 ;;		None
  1371 ;; Auto vars:     Size  Location     Type
  1372 ;;		None
  1373 ;; Return value:  Size  Location     Type
  1374 ;;                  1    wreg      void 
  1375 ;; Registers used:
  1376 ;;		wreg, status,2, cstack
  1377 ;; Tracked objects:
  1378 ;;		On entry : 0/0
  1379 ;;		On exit  : 0/0
  1380 ;;		Unchanged: 0/0
  1381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1386 ;;Total ram usage:        0 bytes
  1387 ;; Hardware stack levels used:    1
  1388 ;; Hardware stack levels required when called:    5
  1389 ;; This function calls:
  1390 ;;		_init_interrupts
  1391 ;;		_init_ports
  1392 ;;		_init_timer
  1393 ;;		_start_system
  1394 ;; This function is called by:
  1395 ;;		_main
  1396 ;; This function uses a non-reentrant model
  1397 ;;
  1398                           
  1399                           	psect	text7
  1400  000CC0                     __ptext7:
  1401                           	callstack 0
  1402  000CC0                     _init_all:
  1403                           	callstack 25
  1404  000CC0                     
  1405                           ;hw2_1.c: 505:     init_ports();
  1406  000CC0  EC74  F005         	call	_init_ports	;wreg free
  1407                           
  1408                           ;hw2_1.c: 506:     init_timer();
  1409  000CC4  EC69  F006         	call	_init_timer	;wreg free
  1410                           
  1411                           ;hw2_1.c: 507:     init_interrupts();
  1412  000CC8  EC71  F006         	call	_init_interrupts	;wreg free
  1413                           
  1414                           ;hw2_1.c: 508:     start_system();
  1415  000CCC  EC55  F006         	call	_start_system	;wreg free
  1416  000CD0  0012               	return		;funcret
  1417  000CD2                     __end_of_init_all:
  1418                           	callstack 0
  1419                           
  1420 ;; *************** function _start_system *****************
  1421 ;; Defined at:
  1422 ;;		line 482 in file "hw2_1.c"
  1423 ;; Parameters:    Size  Location     Type
  1424 ;;		None
  1425 ;; Auto vars:     Size  Location     Type
  1426 ;;		None
  1427 ;; Return value:  Size  Location     Type
  1428 ;;                  1    wreg      void 
  1429 ;; Registers used:
  1430 ;;		wreg, status,2
  1431 ;; Tracked objects:
  1432 ;;		On entry : 0/0
  1433 ;;		On exit  : 0/0
  1434 ;;		Unchanged: 0/0
  1435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1440 ;;Total ram usage:        0 bytes
  1441 ;; Hardware stack levels used:    1
  1442 ;; Hardware stack levels required when called:    4
  1443 ;; This function calls:
  1444 ;;		Nothing
  1445 ;; This function is called by:
  1446 ;;		_init_all
  1447 ;; This function uses a non-reentrant model
  1448 ;;
  1449                           
  1450                           	psect	text8
  1451  000CAA                     __ptext8:
  1452                           	callstack 0
  1453  000CAA                     _start_system:
  1454                           	callstack 25
  1455  000CAA                     
  1456                           ;hw2_1.c: 483:     INTCONbits.GIE = 1;
  1457  000CAA  8EF2               	bsf	242,7,c	;volatile
  1458                           
  1459                           ;hw2_1.c: 485:     T1CONbits.TMR1ON = 1;
  1460  000CAC  80CD               	bsf	205,0,c	;volatile
  1461  000CAE                     
  1462                           ;hw2_1.c: 486:     health = 10;
  1463  000CAE  0E00               	movlw	0
  1464  000CB0  6E4A               	movwf	(_health+1)^0,c
  1465  000CB2  0E0A               	movlw	10
  1466  000CB4  6E49               	movwf	_health^0,c
  1467                           
  1468                           ;hw2_1.c: 487:     start_flag = 0;
  1469  000CB6  0E00               	movlw	0
  1470  000CB8  6E0A               	movwf	(_start_flag+1)^0,c
  1471  000CBA  0E00               	movlw	0
  1472  000CBC  6E09               	movwf	_start_flag^0,c
  1473  000CBE  0012               	return		;funcret
  1474  000CC0                     __end_of_start_system:
  1475                           	callstack 0
  1476                           
  1477 ;; *************** function _init_timer *****************
  1478 ;; Defined at:
  1479 ;;		line 120 in file "hw2_1.c"
  1480 ;; Parameters:    Size  Location     Type
  1481 ;;		None
  1482 ;; Auto vars:     Size  Location     Type
  1483 ;;		None
  1484 ;; Return value:  Size  Location     Type
  1485 ;;                  1    wreg      void 
  1486 ;; Registers used:
  1487 ;;		wreg, status,2
  1488 ;; Tracked objects:
  1489 ;;		On entry : 0/0
  1490 ;;		On exit  : 0/0
  1491 ;;		Unchanged: 0/0
  1492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1497 ;;Total ram usage:        0 bytes
  1498 ;; Hardware stack levels used:    1
  1499 ;; Hardware stack levels required when called:    4
  1500 ;; This function calls:
  1501 ;;		Nothing
  1502 ;; This function is called by:
  1503 ;;		_init_all
  1504 ;; This function uses a non-reentrant model
  1505 ;;
  1506                           
  1507                           	psect	text9
  1508  000CD2                     __ptext9:
  1509                           	callstack 0
  1510  000CD2                     _init_timer:
  1511                           	callstack 25
  1512  000CD2                     
  1513                           ;hw2_1.c: 123:     T0CON = 0x46;
  1514  000CD2  0E46               	movlw	70
  1515  000CD4  6ED5               	movwf	213,c	;volatile
  1516                           
  1517                           ;hw2_1.c: 124:     TMR0 = level_init & 0xff;
  1518  000CD6  5037               	movf	_level_init^0,w,c
  1519  000CD8  6ED6               	movwf	214,c	;volatile
  1520  000CDA  6AD7               	clrf	215,c	;volatile
  1521                           
  1522                           ;hw2_1.c: 125:     T1CON = 0x00;
  1523  000CDC  0E00               	movlw	0
  1524  000CDE  6ECD               	movwf	205,c	;volatile
  1525  000CE0  0012               	return		;funcret
  1526  000CE2                     __end_of_init_timer:
  1527                           	callstack 0
  1528                           
  1529 ;; *************** function _init_ports *****************
  1530 ;; Defined at:
  1531 ;;		line 52 in file "hw2_1.c"
  1532 ;; Parameters:    Size  Location     Type
  1533 ;;		None
  1534 ;; Auto vars:     Size  Location     Type
  1535 ;;		None
  1536 ;; Return value:  Size  Location     Type
  1537 ;;                  1    wreg      void 
  1538 ;; Registers used:
  1539 ;;		wreg, status,2
  1540 ;; Tracked objects:
  1541 ;;		On entry : 0/0
  1542 ;;		On exit  : 0/0
  1543 ;;		Unchanged: 0/0
  1544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1549 ;;Total ram usage:        0 bytes
  1550 ;; Hardware stack levels used:    1
  1551 ;; Hardware stack levels required when called:    4
  1552 ;; This function calls:
  1553 ;;		Nothing
  1554 ;; This function is called by:
  1555 ;;		_init_all
  1556 ;; This function uses a non-reentrant model
  1557 ;;
  1558                           
  1559                           	psect	text10
  1560  000AE8                     __ptext10:
  1561                           	callstack 0
  1562  000AE8                     _init_ports:
  1563                           	callstack 25
  1564  000AE8                     
  1565                           ;hw2_1.c: 53:     TRISA = 0x00;
  1566  000AE8  0E00               	movlw	0
  1567  000AEA  6E92               	movwf	146,c	;volatile
  1568                           
  1569                           ;hw2_1.c: 54:     TRISB = 0x00;
  1570  000AEC  0E00               	movlw	0
  1571  000AEE  6E93               	movwf	147,c	;volatile
  1572                           
  1573                           ;hw2_1.c: 55:     TRISC = 0x01;
  1574  000AF0  0E01               	movlw	1
  1575  000AF2  6E94               	movwf	148,c	;volatile
  1576                           
  1577                           ;hw2_1.c: 56:     TRISD = 0x00;
  1578  000AF4  0E00               	movlw	0
  1579  000AF6  6E95               	movwf	149,c	;volatile
  1580                           
  1581                           ;hw2_1.c: 57:     TRISE = 0x00;
  1582  000AF8  0E00               	movlw	0
  1583  000AFA  6E96               	movwf	150,c	;volatile
  1584                           
  1585                           ;hw2_1.c: 58:     TRISF = 0x00;
  1586  000AFC  0E00               	movlw	0
  1587  000AFE  6E97               	movwf	151,c	;volatile
  1588                           
  1589                           ;hw2_1.c: 59:     TRISG = 0x0F;
  1590  000B00  0E0F               	movlw	15
  1591  000B02  6E98               	movwf	152,c	;volatile
  1592                           
  1593                           ;hw2_1.c: 60:     TRISJ = 0x00;
  1594  000B04  0E00               	movlw	0
  1595  000B06  6E9A               	movwf	154,c	;volatile
  1596                           
  1597                           ;hw2_1.c: 61:     PORTJ =0X00;
  1598  000B08  0E00               	movlw	0
  1599  000B0A  6E88               	movwf	136,c	;volatile
  1600                           
  1601                           ;hw2_1.c: 62:     TRISH =0X00;
  1602  000B0C  0E00               	movlw	0
  1603  000B0E  6E99               	movwf	153,c	;volatile
  1604                           
  1605                           ;hw2_1.c: 63:     PORTA = 0x00;
  1606  000B10  0E00               	movlw	0
  1607  000B12  6E80               	movwf	128,c	;volatile
  1608                           
  1609                           ;hw2_1.c: 64:     PORTB = 0x00;
  1610  000B14  0E00               	movlw	0
  1611  000B16  6E81               	movwf	129,c	;volatile
  1612                           
  1613                           ;hw2_1.c: 65:     PORTC = 0x00;
  1614  000B18  0E00               	movlw	0
  1615  000B1A  6E82               	movwf	130,c	;volatile
  1616                           
  1617                           ;hw2_1.c: 66:     LATC = 0x00;
  1618  000B1C  0E00               	movlw	0
  1619  000B1E  6E8B               	movwf	139,c	;volatile
  1620                           
  1621                           ;hw2_1.c: 67:     PORTD = 0x00;
  1622  000B20  0E00               	movlw	0
  1623  000B22  6E83               	movwf	131,c	;volatile
  1624                           
  1625                           ;hw2_1.c: 68:     PORTE = 0x00;
  1626  000B24  0E00               	movlw	0
  1627  000B26  6E84               	movwf	132,c	;volatile
  1628                           
  1629                           ;hw2_1.c: 69:     PORTF = 0x00;
  1630  000B28  0E00               	movlw	0
  1631  000B2A  6E85               	movwf	133,c	;volatile
  1632                           
  1633                           ;hw2_1.c: 70:     PORTG = 0x00; LATG = 0x00;
  1634  000B2C  0E00               	movlw	0
  1635  000B2E  6E86               	movwf	134,c	;volatile
  1636  000B30  0E00               	movlw	0
  1637  000B32  6E8F               	movwf	143,c	;volatile
  1638  000B34  0012               	return		;funcret
  1639  000B36                     __end_of_init_ports:
  1640                           	callstack 0
  1641                           
  1642 ;; *************** function _init_interrupts *****************
  1643 ;; Defined at:
  1644 ;;		line 127 in file "hw2_1.c"
  1645 ;; Parameters:    Size  Location     Type
  1646 ;;		None
  1647 ;; Auto vars:     Size  Location     Type
  1648 ;;		None
  1649 ;; Return value:  Size  Location     Type
  1650 ;;                  1    wreg      void 
  1651 ;; Registers used:
  1652 ;;		wreg, status,2
  1653 ;; Tracked objects:
  1654 ;;		On entry : 0/0
  1655 ;;		On exit  : 0/0
  1656 ;;		Unchanged: 0/0
  1657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1662 ;;Total ram usage:        0 bytes
  1663 ;; Hardware stack levels used:    1
  1664 ;; Hardware stack levels required when called:    4
  1665 ;; This function calls:
  1666 ;;		Nothing
  1667 ;; This function is called by:
  1668 ;;		_init_all
  1669 ;; This function uses a non-reentrant model
  1670 ;;
  1671                           
  1672                           	psect	text11
  1673  000CE2                     __ptext11:
  1674                           	callstack 0
  1675  000CE2                     _init_interrupts:
  1676                           	callstack 25
  1677  000CE2                     
  1678                           ;hw2_1.c: 128:     INTCON = 0x00;
  1679  000CE2  0E00               	movlw	0
  1680  000CE4  6EF2               	movwf	242,c	;volatile
  1681  000CE6                     
  1682                           ;hw2_1.c: 129:     INTCONbits.TMR0IE = 1;
  1683  000CE6  8AF2               	bsf	242,5,c	;volatile
  1684  000CE8                     
  1685                           ;hw2_1.c: 130:     INTCONbits.GIE = 1;
  1686  000CE8  8EF2               	bsf	242,7,c	;volatile
  1687  000CEA  0012               	return		;funcret
  1688  000CEC                     __end_of_init_interrupts:
  1689                           	callstack 0
  1690                           
  1691 ;; *************** function _display_task *****************
  1692 ;; Defined at:
  1693 ;;		line 262 in file "hw2_1.c"
  1694 ;; Parameters:    Size  Location     Type
  1695 ;;		None
  1696 ;; Auto vars:     Size  Location     Type
  1697 ;;		None
  1698 ;; Return value:  Size  Location     Type
  1699 ;;                  1    wreg      void 
  1700 ;; Registers used:
  1701 ;;		wreg, status,2, status,0, cstack
  1702 ;; Tracked objects:
  1703 ;;		On entry : 0/0
  1704 ;;		On exit  : 0/0
  1705 ;;		Unchanged: 0/0
  1706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1709 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1710 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1711 ;;Total ram usage:        2 bytes
  1712 ;; Hardware stack levels used:    1
  1713 ;; Hardware stack levels required when called:    5
  1714 ;; This function calls:
  1715 ;;		_DELAY_ms
  1716 ;; This function is called by:
  1717 ;;		_main
  1718 ;; This function uses a non-reentrant model
  1719 ;;
  1720                           
  1721                           	psect	text12
  1722  00002A                     __ptext12:
  1723                           	callstack 0
  1724  00002A                     _display_task:
  1725                           	callstack 25
  1726  00002A                     
  1727                           ;hw2_1.c: 263:     switch(health){
  1728  00002A  EF54  F002         	goto	l1919
  1729  00002E                     l1617:
  1730                           
  1731                           ;hw2_1.c: 265:                 PORTH = 0x01;
  1732  00002E  0E01               	movlw	1
  1733  000030  6E87               	movwf	135,c	;volatile
  1734  000032                     
  1735                           ;hw2_1.c: 266:                 PORTJ = health_points[9];
  1736  000032  C032  FF88         	movff	_health_points+9,3976	;volatile
  1737  000036                     
  1738                           ;hw2_1.c: 267:                 if(level == 1){
  1739  000036  0425               	decf	_level^0,w,c
  1740  000038  1026               	iorwf	(_level+1)^0,w,c
  1741  00003A  A4D8               	btfss	status,2,c
  1742  00003C  EF22  F000         	goto	u861
  1743  000040  EF24  F000         	goto	u860
  1744  000044                     u861:
  1745  000044  EF2E  F000         	goto	l1629
  1746  000048                     u860:
  1747  000048                     
  1748                           ;hw2_1.c: 268:                     DELAY_ms(1);
  1749  000048  0E00               	movlw	0
  1750  00004A  6E42               	movwf	(DELAY_ms@ms_Count+1)^0,c
  1751  00004C  0E01               	movlw	1
  1752  00004E  6E41               	movwf	DELAY_ms@ms_Count^0,c
  1753  000050  EC9B  F005         	call	_DELAY_ms	;wreg free
  1754  000054                     
  1755                           ;hw2_1.c: 269:                     PORTH = 0x08;
  1756  000054  0E08               	movlw	8
  1757  000056  6E87               	movwf	135,c	;volatile
  1758  000058                     
  1759                           ;hw2_1.c: 270:                     PORTJ = health_points[1];
  1760  000058  C02A  FF88         	movff	_health_points+1,3976	;volatile
  1761  00005C                     l1629:
  1762                           
  1763                           ;hw2_1.c: 272:                 if(level == 2){
  1764  00005C  0E02               	movlw	2
  1765  00005E  1825               	xorwf	_level^0,w,c
  1766  000060  1026               	iorwf	(_level+1)^0,w,c
  1767  000062  A4D8               	btfss	status,2,c
  1768  000064  EF36  F000         	goto	u871
  1769  000068  EF38  F000         	goto	u870
  1770  00006C                     u871:
  1771  00006C  EF42  F000         	goto	l1637
  1772  000070                     u870:
  1773  000070                     
  1774                           ;hw2_1.c: 273:                     DELAY_ms(1);
  1775  000070  0E00               	movlw	0
  1776  000072  6E42               	movwf	(DELAY_ms@ms_Count+1)^0,c
  1777  000074  0E01               	movlw	1
  1778  000076  6E41               	movwf	DELAY_ms@ms_Count^0,c
  1779  000078  EC9B  F005         	call	_DELAY_ms	;wreg free
  1780  00007C                     
  1781                           ;hw2_1.c: 274:                     PORTH = 0x08;
  1782  00007C  0E08               	movlw	8
  1783  00007E  6E87               	movwf	135,c	;volatile
  1784  000080                     
  1785                           ;hw2_1.c: 275:                     PORTJ = health_points[2];
  1786  000080  C02B  FF88         	movff	_health_points+2,3976	;volatile
  1787  000084                     l1637:
  1788                           
  1789                           ;hw2_1.c: 277:                 if(level == 3){
  1790  000084  0E03               	movlw	3
  1791  000086  1825               	xorwf	_level^0,w,c
  1792  000088  1026               	iorwf	(_level+1)^0,w,c
  1793  00008A  A4D8               	btfss	status,2,c
  1794  00008C  EF4A  F000         	goto	u881
  1795  000090  EF4C  F000         	goto	u880
  1796  000094                     u881:
  1797  000094  EF9D  F002         	goto	l262
  1798  000098                     u880:
  1799  000098                     l1639:
  1800                           
  1801                           ;hw2_1.c: 278:                     DELAY_ms(1);
  1802  000098  0E00               	movlw	0
  1803  00009A  6E42               	movwf	(DELAY_ms@ms_Count+1)^0,c
  1804  00009C  0E01               	movlw	1
  1805  00009E  6E41               	movwf	DELAY_ms@ms_Count^0,c
  1806  0000A0  EC9B  F005         	call	_DELAY_ms	;wreg free
  1807  0000A4                     
  1808                           ;hw2_1.c: 279:                     PORTH = 0x08;
  1809  0000A4  0E08               	movlw	8
  1810  0000A6  6E87               	movwf	135,c	;volatile
  1811  0000A8                     
  1812                           ;hw2_1.c: 280:                     PORTJ = health_points[3];
  1813  0000A8  C02C  FF88         	movff	_health_points+3,3976	;volatile
  1814  0000AC  EF9D  F002         	goto	l262
  1815  0000B0                     l1645:
  1816                           
  1817                           ;hw2_1.c: 284:                 PORTH = 0x01;
  1818  0000B0  0E01               	movlw	1
  1819  0000B2  6E87               	movwf	135,c	;volatile
  1820  0000B4                     
  1821                           ;hw2_1.c: 285:                 PORTJ = health_points[8];
  1822  0000B4  C031  FF88         	movff	_health_points+8,3976	;volatile
  1823  0000B8                     
  1824                           ;hw2_1.c: 286:                 if(level == 1){
  1825  0000B8  0425               	decf	_level^0,w,c
  1826  0000BA  1026               	iorwf	(_level+1)^0,w,c
  1827  0000BC  A4D8               	btfss	status,2,c
  1828  0000BE  EF63  F000         	goto	u891
  1829  0000C2  EF65  F000         	goto	u890
  1830  0000C6                     u891:
  1831  0000C6  EF6F  F000         	goto	l1657
  1832  0000CA                     u890:
  1833  0000CA                     
  1834                           ;hw2_1.c: 287:                     DELAY_ms(1);
  1835  0000CA  0E00               	movlw	0
  1836  0000CC  6E42               	movwf	(DELAY_ms@ms_Count+1)^0,c
  1837  0000CE  0E01               	movlw	1
  1838  0000D0  6E41               	movwf	DELAY_ms@ms_Count^0,c
  1839  0000D2  EC9B  F005         	call	_DELAY_ms	;wreg free
  1840  0000D6                     
  1841                           ;hw2_1.c: 288:                     PORTH = 0x08;
  1842  0000D6  0E08               	movlw	8
  1843  0000D8  6E87               	movwf	135,c	;volatile
  1844  0000DA                     
  1845                           ;hw2_1.c: 289:                     PORTJ = health_points[1];
  1846  0000DA  C02A  FF88         	movff	_health_points+1,3976	;volatile
  1847  0000DE                     l1657:
  1848                           
  1849                           ;hw2_1.c: 291:                 if(level == 2){
  1850  0000DE  0E02               	movlw	2
  1851  0000E0  1825               	xorwf	_level^0,w,c
  1852  0000E2  1026               	iorwf	(_level+1)^0,w,c
  1853  0000E4  A4D8               	btfss	status,2,c
  1854  0000E6  EF77  F000         	goto	u901
  1855  0000EA  EF79  F000         	goto	u900
  1856  0000EE                     u901:
  1857  0000EE  EF83  F000         	goto	l1665
  1858  0000F2                     u900:
  1859  0000F2                     
  1860                           ;hw2_1.c: 292:                     DELAY_ms(1);
  1861  0000F2  0E00               	movlw	0
  1862  0000F4  6E42               	movwf	(DELAY_ms@ms_Count+1)^0,c
  1863  0000F6  0E01               	movlw	1
  1864  0000F8  6E41               	movwf	DELAY_ms@ms_Count^0,c
  1865  0000FA  EC9B  F005         	call	_DELAY_ms	;wreg free
  1866  0000FE                     
  1867                           ;hw2_1.c: 293:                     PORTH = 0x08;
  1868  0000FE  0E08               	movlw	8
  1869  000100  6E87               	movwf	135,c	;volatile
  1870  000102                     
  1871                           ;hw2_1.c: 294:                     PORTJ = health_points[2];
  1872  000102  C02B  FF88         	movff	_health_points+2,3976	;volatile
  1873  000106                     l1665:
  1874                           
  1875                           ;hw2_1.c: 296:                 if(level == 3){
  1876  000106  0E03               	movlw	3
  1877  000108  1825               	xorwf	_level^0,w,c
  1878  00010A  1026               	iorwf	(_level+1)^0,w,c
  1879  00010C  A4D8               	btfss	status,2,c
  1880  00010E  EF8B  F000         	goto	u911
  1881  000112  EF8D  F000         	goto	u910
  1882  000116                     u911:
  1883  000116  EF9D  F002         	goto	l262
  1884  00011A                     u910:
  1885  00011A  EF4C  F000         	goto	l1639
  1886  00011E                     l1673:
  1887                           
  1888                           ;hw2_1.c: 303:                 PORTH = 0x01;
  1889  00011E  0E01               	movlw	1
  1890  000120  6E87               	movwf	135,c	;volatile
  1891  000122                     
  1892                           ;hw2_1.c: 304:                 PORTJ = health_points[7];
  1893  000122  C030  FF88         	movff	_health_points+7,3976	;volatile
  1894  000126                     
  1895                           ;hw2_1.c: 306:                 if(level == 1){
  1896  000126  0425               	decf	_level^0,w,c
  1897  000128  1026               	iorwf	(_level+1)^0,w,c
  1898  00012A  A4D8               	btfss	status,2,c
  1899  00012C  EF9A  F000         	goto	u921
  1900  000130  EF9C  F000         	goto	u920
  1901  000134                     u921:
  1902  000134  EFA6  F000         	goto	l1685
  1903  000138                     u920:
  1904  000138                     
  1905                           ;hw2_1.c: 307:                     DELAY_ms(1);
  1906  000138  0E00               	movlw	0
  1907  00013A  6E42               	movwf	(DELAY_ms@ms_Count+1)^0,c
  1908  00013C  0E01               	movlw	1
  1909  00013E  6E41               	movwf	DELAY_ms@ms_Count^0,c
  1910  000140  EC9B  F005         	call	_DELAY_ms	;wreg free
  1911  000144                     
  1912                           ;hw2_1.c: 308:                     PORTH = 0x08;
  1913  000144  0E08               	movlw	8
  1914  000146  6E87               	movwf	135,c	;volatile
  1915  000148                     
  1916                           ;hw2_1.c: 309:                     PORTJ = health_points[1];
  1917  000148  C02A  FF88         	movff	_health_points+1,3976	;volatile
  1918  00014C                     l1685:
  1919                           
  1920                           ;hw2_1.c: 311:                 if(level == 2){
  1921  00014C  0E02               	movlw	2
  1922  00014E  1825               	xorwf	_level^0,w,c
  1923  000150  1026               	iorwf	(_level+1)^0,w,c
  1924  000152  A4D8               	btfss	status,2,c
  1925  000154  EFAE  F000         	goto	u931
  1926  000158  EFB0  F000         	goto	u930
  1927  00015C                     u931:
  1928  00015C  EFBA  F000         	goto	l1693
  1929  000160                     u930:
  1930  000160                     
  1931                           ;hw2_1.c: 312:                     DELAY_ms(1);
  1932  000160  0E00               	movlw	0
  1933  000162  6E42               	movwf	(DELAY_ms@ms_Count+1)^0,c
  1934  000164  0E01               	movlw	1
  1935  000166  6E41               	movwf	DELAY_ms@ms_Count^0,c
  1936  000168  EC9B  F005         	call	_DELAY_ms	;wreg free
  1937  00016C                     
  1938                           ;hw2_1.c: 313:                     PORTH = 0x08;
  1939  00016C  0E08               	movlw	8
  1940  00016E  6E87               	movwf	135,c	;volatile
  1941  000170                     
  1942                           ;hw2_1.c: 314:                     PORTJ = health_points[2];
  1943  000170  C02B  FF88         	movff	_health_points+2,3976	;volatile
  1944  000174                     l1693:
  1945                           
  1946                           ;hw2_1.c: 316:                 if(level == 3){
  1947  000174  0E03               	movlw	3
  1948  000176  1825               	xorwf	_level^0,w,c
  1949  000178  1026               	iorwf	(_level+1)^0,w,c
  1950  00017A  A4D8               	btfss	status,2,c
  1951  00017C  EFC2  F000         	goto	u941
  1952  000180  EFC4  F000         	goto	u940
  1953  000184                     u941:
  1954  000184  EF9D  F002         	goto	l262
  1955  000188                     u940:
  1956  000188  EF4C  F000         	goto	l1639
  1957  00018C                     l1701:
  1958                           
  1959                           ;hw2_1.c: 323:                 PORTH = 0x01;
  1960  00018C  0E01               	movlw	1
  1961  00018E  6E87               	movwf	135,c	;volatile
  1962  000190                     
  1963                           ;hw2_1.c: 324:                 PORTJ = health_points[6];
  1964  000190  C02F  FF88         	movff	_health_points+6,3976	;volatile
  1965  000194                     
  1966                           ;hw2_1.c: 325:                 if(level == 1){
  1967  000194  0425               	decf	_level^0,w,c
  1968  000196  1026               	iorwf	(_level+1)^0,w,c
  1969  000198  A4D8               	btfss	status,2,c
  1970  00019A  EFD1  F000         	goto	u951
  1971  00019E  EFD3  F000         	goto	u950
  1972  0001A2                     u951:
  1973  0001A2  EFDD  F000         	goto	l1713
  1974  0001A6                     u950:
  1975  0001A6                     
  1976                           ;hw2_1.c: 326:                     DELAY_ms(1);
  1977  0001A6  0E00               	movlw	0
  1978  0001A8  6E42               	movwf	(DELAY_ms@ms_Count+1)^0,c
  1979  0001AA  0E01               	movlw	1
  1980  0001AC  6E41               	movwf	DELAY_ms@ms_Count^0,c
  1981  0001AE  EC9B  F005         	call	_DELAY_ms	;wreg free
  1982  0001B2                     
  1983                           ;hw2_1.c: 327:                     PORTH = 0x08;
  1984  0001B2  0E08               	movlw	8
  1985  0001B4  6E87               	movwf	135,c	;volatile
  1986  0001B6                     
  1987                           ;hw2_1.c: 328:                     PORTJ = health_points[1];
  1988  0001B6  C02A  FF88         	movff	_health_points+1,3976	;volatile
  1989  0001BA                     l1713:
  1990                           
  1991                           ;hw2_1.c: 330:                 if(level == 2){
  1992  0001BA  0E02               	movlw	2
  1993  0001BC  1825               	xorwf	_level^0,w,c
  1994  0001BE  1026               	iorwf	(_level+1)^0,w,c
  1995  0001C0  A4D8               	btfss	status,2,c
  1996  0001C2  EFE5  F000         	goto	u961
  1997  0001C6  EFE7  F000         	goto	u960
  1998  0001CA                     u961:
  1999  0001CA  EFF1  F000         	goto	l1721
  2000  0001CE                     u960:
  2001  0001CE                     
  2002                           ;hw2_1.c: 331:                     DELAY_ms(1);
  2003  0001CE  0E00               	movlw	0
  2004  0001D0  6E42               	movwf	(DELAY_ms@ms_Count+1)^0,c
  2005  0001D2  0E01               	movlw	1
  2006  0001D4  6E41               	movwf	DELAY_ms@ms_Count^0,c
  2007  0001D6  EC9B  F005         	call	_DELAY_ms	;wreg free
  2008  0001DA                     
  2009                           ;hw2_1.c: 332:                     PORTH = 0x08;
  2010  0001DA  0E08               	movlw	8
  2011  0001DC  6E87               	movwf	135,c	;volatile
  2012  0001DE                     
  2013                           ;hw2_1.c: 333:                     PORTJ = health_points[2];
  2014  0001DE  C02B  FF88         	movff	_health_points+2,3976	;volatile
  2015  0001E2                     l1721:
  2016                           
  2017                           ;hw2_1.c: 335:                 if(level == 3){
  2018  0001E2  0E03               	movlw	3
  2019  0001E4  1825               	xorwf	_level^0,w,c
  2020  0001E6  1026               	iorwf	(_level+1)^0,w,c
  2021  0001E8  A4D8               	btfss	status,2,c
  2022  0001EA  EFF9  F000         	goto	u971
  2023  0001EE  EFFB  F000         	goto	u970
  2024  0001F2                     u971:
  2025  0001F2  EF9D  F002         	goto	l262
  2026  0001F6                     u970:
  2027  0001F6  EF4C  F000         	goto	l1639
  2028  0001FA                     l1729:
  2029                           
  2030                           ;hw2_1.c: 342:                 PORTH = 0x01;
  2031  0001FA  0E01               	movlw	1
  2032  0001FC  6E87               	movwf	135,c	;volatile
  2033  0001FE                     
  2034                           ;hw2_1.c: 343:                 PORTJ = health_points[5];
  2035  0001FE  C02E  FF88         	movff	_health_points+5,3976	;volatile
  2036  000202                     
  2037                           ;hw2_1.c: 344:                 if(level == 1){
  2038  000202  0425               	decf	_level^0,w,c
  2039  000204  1026               	iorwf	(_level+1)^0,w,c
  2040  000206  A4D8               	btfss	status,2,c
  2041  000208  EF08  F001         	goto	u981
  2042  00020C  EF0A  F001         	goto	u980
  2043  000210                     u981:
  2044  000210  EF14  F001         	goto	l1741
  2045  000214                     u980:
  2046  000214                     
  2047                           ;hw2_1.c: 345:                     DELAY_ms(1);
  2048  000214  0E00               	movlw	0
  2049  000216  6E42               	movwf	(DELAY_ms@ms_Count+1)^0,c
  2050  000218  0E01               	movlw	1
  2051  00021A  6E41               	movwf	DELAY_ms@ms_Count^0,c
  2052  00021C  EC9B  F005         	call	_DELAY_ms	;wreg free
  2053  000220                     
  2054                           ;hw2_1.c: 346:                     PORTH = 0x08;
  2055  000220  0E08               	movlw	8
  2056  000222  6E87               	movwf	135,c	;volatile
  2057  000224                     
  2058                           ;hw2_1.c: 347:                     PORTJ = health_points[1];
  2059  000224  C02A  FF88         	movff	_health_points+1,3976	;volatile
  2060  000228                     l1741:
  2061                           
  2062                           ;hw2_1.c: 349:                 if(level == 2){
  2063  000228  0E02               	movlw	2
  2064  00022A  1825               	xorwf	_level^0,w,c
  2065  00022C  1026               	iorwf	(_level+1)^0,w,c
  2066  00022E  A4D8               	btfss	status,2,c
  2067  000230  EF1C  F001         	goto	u991
  2068  000234  EF1E  F001         	goto	u990
  2069  000238                     u991:
  2070  000238  EF28  F001         	goto	l1749
  2071  00023C                     u990:
  2072  00023C                     
  2073                           ;hw2_1.c: 350:                     DELAY_ms(1);
  2074  00023C  0E00               	movlw	0
  2075  00023E  6E42               	movwf	(DELAY_ms@ms_Count+1)^0,c
  2076  000240  0E01               	movlw	1
  2077  000242  6E41               	movwf	DELAY_ms@ms_Count^0,c
  2078  000244  EC9B  F005         	call	_DELAY_ms	;wreg free
  2079  000248                     
  2080                           ;hw2_1.c: 351:                     PORTH = 0x08;
  2081  000248  0E08               	movlw	8
  2082  00024A  6E87               	movwf	135,c	;volatile
  2083  00024C                     
  2084                           ;hw2_1.c: 352:                     PORTJ = health_points[2];
  2085  00024C  C02B  FF88         	movff	_health_points+2,3976	;volatile
  2086  000250                     l1749:
  2087                           
  2088                           ;hw2_1.c: 354:                 if(level == 3){
  2089  000250  0E03               	movlw	3
  2090  000252  1825               	xorwf	_level^0,w,c
  2091  000254  1026               	iorwf	(_level+1)^0,w,c
  2092  000256  A4D8               	btfss	status,2,c
  2093  000258  EF30  F001         	goto	u1001
  2094  00025C  EF32  F001         	goto	u1000
  2095  000260                     u1001:
  2096  000260  EF9D  F002         	goto	l262
  2097  000264                     u1000:
  2098  000264  EF4C  F000         	goto	l1639
  2099  000268                     l1757:
  2100                           
  2101                           ;hw2_1.c: 361:                 PORTH = 0x01;
  2102  000268  0E01               	movlw	1
  2103  00026A  6E87               	movwf	135,c	;volatile
  2104  00026C                     
  2105                           ;hw2_1.c: 362:                 PORTJ = health_points[4];
  2106  00026C  C02D  FF88         	movff	_health_points+4,3976	;volatile
  2107  000270                     
  2108                           ;hw2_1.c: 363:                 if(level == 1){
  2109  000270  0425               	decf	_level^0,w,c
  2110  000272  1026               	iorwf	(_level+1)^0,w,c
  2111  000274  A4D8               	btfss	status,2,c
  2112  000276  EF3F  F001         	goto	u1011
  2113  00027A  EF41  F001         	goto	u1010
  2114  00027E                     u1011:
  2115  00027E  EF4B  F001         	goto	l1769
  2116  000282                     u1010:
  2117  000282                     
  2118                           ;hw2_1.c: 364:                     DELAY_ms(1);
  2119  000282  0E00               	movlw	0
  2120  000284  6E42               	movwf	(DELAY_ms@ms_Count+1)^0,c
  2121  000286  0E01               	movlw	1
  2122  000288  6E41               	movwf	DELAY_ms@ms_Count^0,c
  2123  00028A  EC9B  F005         	call	_DELAY_ms	;wreg free
  2124  00028E                     
  2125                           ;hw2_1.c: 365:                     PORTH = 0x08;
  2126  00028E  0E08               	movlw	8
  2127  000290  6E87               	movwf	135,c	;volatile
  2128  000292                     
  2129                           ;hw2_1.c: 366:                     PORTJ = health_points[1];
  2130  000292  C02A  FF88         	movff	_health_points+1,3976	;volatile
  2131  000296                     l1769:
  2132                           
  2133                           ;hw2_1.c: 368:                 if(level == 2){
  2134  000296  0E02               	movlw	2
  2135  000298  1825               	xorwf	_level^0,w,c
  2136  00029A  1026               	iorwf	(_level+1)^0,w,c
  2137  00029C  A4D8               	btfss	status,2,c
  2138  00029E  EF53  F001         	goto	u1021
  2139  0002A2  EF55  F001         	goto	u1020
  2140  0002A6                     u1021:
  2141  0002A6  EF5F  F001         	goto	l1777
  2142  0002AA                     u1020:
  2143  0002AA                     
  2144                           ;hw2_1.c: 369:                     DELAY_ms(1);
  2145  0002AA  0E00               	movlw	0
  2146  0002AC  6E42               	movwf	(DELAY_ms@ms_Count+1)^0,c
  2147  0002AE  0E01               	movlw	1
  2148  0002B0  6E41               	movwf	DELAY_ms@ms_Count^0,c
  2149  0002B2  EC9B  F005         	call	_DELAY_ms	;wreg free
  2150  0002B6                     
  2151                           ;hw2_1.c: 370:                     PORTH = 0x08;
  2152  0002B6  0E08               	movlw	8
  2153  0002B8  6E87               	movwf	135,c	;volatile
  2154  0002BA                     
  2155                           ;hw2_1.c: 371:                     PORTJ = health_points[2];
  2156  0002BA  C02B  FF88         	movff	_health_points+2,3976	;volatile
  2157  0002BE                     l1777:
  2158                           
  2159                           ;hw2_1.c: 373:                 if(level == 3){
  2160  0002BE  0E03               	movlw	3
  2161  0002C0  1825               	xorwf	_level^0,w,c
  2162  0002C2  1026               	iorwf	(_level+1)^0,w,c
  2163  0002C4  A4D8               	btfss	status,2,c
  2164  0002C6  EF67  F001         	goto	u1031
  2165  0002CA  EF69  F001         	goto	u1030
  2166  0002CE                     u1031:
  2167  0002CE  EF9D  F002         	goto	l262
  2168  0002D2                     u1030:
  2169  0002D2  EF4C  F000         	goto	l1639
  2170  0002D6                     l1785:
  2171                           
  2172                           ;hw2_1.c: 380:                 PORTH = 0x01;
  2173  0002D6  0E01               	movlw	1
  2174  0002D8  6E87               	movwf	135,c	;volatile
  2175  0002DA                     
  2176                           ;hw2_1.c: 381:                 PORTJ = health_points[3];
  2177  0002DA  C02C  FF88         	movff	_health_points+3,3976	;volatile
  2178  0002DE                     
  2179                           ;hw2_1.c: 382:                 if(level == 1){
  2180  0002DE  0425               	decf	_level^0,w,c
  2181  0002E0  1026               	iorwf	(_level+1)^0,w,c
  2182  0002E2  A4D8               	btfss	status,2,c
  2183  0002E4  EF76  F001         	goto	u1041
  2184  0002E8  EF78  F001         	goto	u1040
  2185  0002EC                     u1041:
  2186  0002EC  EF82  F001         	goto	l1797
  2187  0002F0                     u1040:
  2188  0002F0                     
  2189                           ;hw2_1.c: 383:                     DELAY_ms(1);
  2190  0002F0  0E00               	movlw	0
  2191  0002F2  6E42               	movwf	(DELAY_ms@ms_Count+1)^0,c
  2192  0002F4  0E01               	movlw	1
  2193  0002F6  6E41               	movwf	DELAY_ms@ms_Count^0,c
  2194  0002F8  EC9B  F005         	call	_DELAY_ms	;wreg free
  2195  0002FC                     
  2196                           ;hw2_1.c: 384:                     PORTH = 0x08;
  2197  0002FC  0E08               	movlw	8
  2198  0002FE  6E87               	movwf	135,c	;volatile
  2199  000300                     
  2200                           ;hw2_1.c: 385:                     PORTJ = health_points[1];
  2201  000300  C02A  FF88         	movff	_health_points+1,3976	;volatile
  2202  000304                     l1797:
  2203                           
  2204                           ;hw2_1.c: 387:                 if(level == 2){
  2205  000304  0E02               	movlw	2
  2206  000306  1825               	xorwf	_level^0,w,c
  2207  000308  1026               	iorwf	(_level+1)^0,w,c
  2208  00030A  A4D8               	btfss	status,2,c
  2209  00030C  EF8A  F001         	goto	u1051
  2210  000310  EF8C  F001         	goto	u1050
  2211  000314                     u1051:
  2212  000314  EF96  F001         	goto	l1805
  2213  000318                     u1050:
  2214  000318                     
  2215                           ;hw2_1.c: 388:                     DELAY_ms(1);
  2216  000318  0E00               	movlw	0
  2217  00031A  6E42               	movwf	(DELAY_ms@ms_Count+1)^0,c
  2218  00031C  0E01               	movlw	1
  2219  00031E  6E41               	movwf	DELAY_ms@ms_Count^0,c
  2220  000320  EC9B  F005         	call	_DELAY_ms	;wreg free
  2221  000324                     
  2222                           ;hw2_1.c: 389:                     PORTH = 0x08;
  2223  000324  0E08               	movlw	8
  2224  000326  6E87               	movwf	135,c	;volatile
  2225  000328                     
  2226                           ;hw2_1.c: 390:                     PORTJ = health_points[2];
  2227  000328  C02B  FF88         	movff	_health_points+2,3976	;volatile
  2228  00032C                     l1805:
  2229                           
  2230                           ;hw2_1.c: 392:                 if(level == 3){
  2231  00032C  0E03               	movlw	3
  2232  00032E  1825               	xorwf	_level^0,w,c
  2233  000330  1026               	iorwf	(_level+1)^0,w,c
  2234  000332  A4D8               	btfss	status,2,c
  2235  000334  EF9E  F001         	goto	u1061
  2236  000338  EFA0  F001         	goto	u1060
  2237  00033C                     u1061:
  2238  00033C  EF9D  F002         	goto	l262
  2239  000340                     u1060:
  2240  000340  EF4C  F000         	goto	l1639
  2241  000344                     l1813:
  2242                           
  2243                           ;hw2_1.c: 399:                 PORTH = 0x01;
  2244  000344  0E01               	movlw	1
  2245  000346  6E87               	movwf	135,c	;volatile
  2246  000348                     
  2247                           ;hw2_1.c: 400:                 PORTJ = health_points[2];
  2248  000348  C02B  FF88         	movff	_health_points+2,3976	;volatile
  2249  00034C                     
  2250                           ;hw2_1.c: 401:                 if(level == 1){
  2251  00034C  0425               	decf	_level^0,w,c
  2252  00034E  1026               	iorwf	(_level+1)^0,w,c
  2253  000350  A4D8               	btfss	status,2,c
  2254  000352  EFAD  F001         	goto	u1071
  2255  000356  EFAF  F001         	goto	u1070
  2256  00035A                     u1071:
  2257  00035A  EFB9  F001         	goto	l1825
  2258  00035E                     u1070:
  2259  00035E                     
  2260                           ;hw2_1.c: 402:                     DELAY_ms(1);
  2261  00035E  0E00               	movlw	0
  2262  000360  6E42               	movwf	(DELAY_ms@ms_Count+1)^0,c
  2263  000362  0E01               	movlw	1
  2264  000364  6E41               	movwf	DELAY_ms@ms_Count^0,c
  2265  000366  EC9B  F005         	call	_DELAY_ms	;wreg free
  2266  00036A                     
  2267                           ;hw2_1.c: 403:                     PORTH = 0x08;
  2268  00036A  0E08               	movlw	8
  2269  00036C  6E87               	movwf	135,c	;volatile
  2270  00036E                     
  2271                           ;hw2_1.c: 404:                     PORTJ = health_points[1];
  2272  00036E  C02A  FF88         	movff	_health_points+1,3976	;volatile
  2273  000372                     l1825:
  2274                           
  2275                           ;hw2_1.c: 406:                 if(level == 2){
  2276  000372  0E02               	movlw	2
  2277  000374  1825               	xorwf	_level^0,w,c
  2278  000376  1026               	iorwf	(_level+1)^0,w,c
  2279  000378  A4D8               	btfss	status,2,c
  2280  00037A  EFC1  F001         	goto	u1081
  2281  00037E  EFC3  F001         	goto	u1080
  2282  000382                     u1081:
  2283  000382  EFCD  F001         	goto	l1833
  2284  000386                     u1080:
  2285  000386                     
  2286                           ;hw2_1.c: 407:                     DELAY_ms(1);
  2287  000386  0E00               	movlw	0
  2288  000388  6E42               	movwf	(DELAY_ms@ms_Count+1)^0,c
  2289  00038A  0E01               	movlw	1
  2290  00038C  6E41               	movwf	DELAY_ms@ms_Count^0,c
  2291  00038E  EC9B  F005         	call	_DELAY_ms	;wreg free
  2292  000392                     
  2293                           ;hw2_1.c: 408:                     PORTH = 0x08;
  2294  000392  0E08               	movlw	8
  2295  000394  6E87               	movwf	135,c	;volatile
  2296  000396                     
  2297                           ;hw2_1.c: 409:                     PORTJ = health_points[2];
  2298  000396  C02B  FF88         	movff	_health_points+2,3976	;volatile
  2299  00039A                     l1833:
  2300                           
  2301                           ;hw2_1.c: 411:                 if(level == 3){
  2302  00039A  0E03               	movlw	3
  2303  00039C  1825               	xorwf	_level^0,w,c
  2304  00039E  1026               	iorwf	(_level+1)^0,w,c
  2305  0003A0  A4D8               	btfss	status,2,c
  2306  0003A2  EFD5  F001         	goto	u1091
  2307  0003A6  EFD7  F001         	goto	u1090
  2308  0003AA                     u1091:
  2309  0003AA  EF9D  F002         	goto	l262
  2310  0003AE                     u1090:
  2311  0003AE  EF4C  F000         	goto	l1639
  2312  0003B2                     l1841:
  2313                           
  2314                           ;hw2_1.c: 418:                 PORTH = 0x01;
  2315  0003B2  0E01               	movlw	1
  2316  0003B4  6E87               	movwf	135,c	;volatile
  2317  0003B6                     
  2318                           ;hw2_1.c: 419:                 PORTJ = health_points[1];
  2319  0003B6  C02A  FF88         	movff	_health_points+1,3976	;volatile
  2320  0003BA                     
  2321                           ;hw2_1.c: 420:                 if(level == 1){
  2322  0003BA  0425               	decf	_level^0,w,c
  2323  0003BC  1026               	iorwf	(_level+1)^0,w,c
  2324  0003BE  A4D8               	btfss	status,2,c
  2325  0003C0  EFE4  F001         	goto	u1101
  2326  0003C4  EFE6  F001         	goto	u1100
  2327  0003C8                     u1101:
  2328  0003C8  EFF0  F001         	goto	l1853
  2329  0003CC                     u1100:
  2330  0003CC                     
  2331                           ;hw2_1.c: 421:                     DELAY_ms(1);
  2332  0003CC  0E00               	movlw	0
  2333  0003CE  6E42               	movwf	(DELAY_ms@ms_Count+1)^0,c
  2334  0003D0  0E01               	movlw	1
  2335  0003D2  6E41               	movwf	DELAY_ms@ms_Count^0,c
  2336  0003D4  EC9B  F005         	call	_DELAY_ms	;wreg free
  2337  0003D8                     
  2338                           ;hw2_1.c: 422:                     PORTH = 0x08;
  2339  0003D8  0E08               	movlw	8
  2340  0003DA  6E87               	movwf	135,c	;volatile
  2341  0003DC                     
  2342                           ;hw2_1.c: 423:                     PORTJ = health_points[1];
  2343  0003DC  C02A  FF88         	movff	_health_points+1,3976	;volatile
  2344  0003E0                     l1853:
  2345                           
  2346                           ;hw2_1.c: 425:                 if(level == 2){
  2347  0003E0  0E02               	movlw	2
  2348  0003E2  1825               	xorwf	_level^0,w,c
  2349  0003E4  1026               	iorwf	(_level+1)^0,w,c
  2350  0003E6  A4D8               	btfss	status,2,c
  2351  0003E8  EFF8  F001         	goto	u1111
  2352  0003EC  EFFA  F001         	goto	u1110
  2353  0003F0                     u1111:
  2354  0003F0  EF04  F002         	goto	l1861
  2355  0003F4                     u1110:
  2356  0003F4                     
  2357                           ;hw2_1.c: 426:                     DELAY_ms(1);
  2358  0003F4  0E00               	movlw	0
  2359  0003F6  6E42               	movwf	(DELAY_ms@ms_Count+1)^0,c
  2360  0003F8  0E01               	movlw	1
  2361  0003FA  6E41               	movwf	DELAY_ms@ms_Count^0,c
  2362  0003FC  EC9B  F005         	call	_DELAY_ms	;wreg free
  2363  000400                     
  2364                           ;hw2_1.c: 427:                     PORTH = 0x08;
  2365  000400  0E08               	movlw	8
  2366  000402  6E87               	movwf	135,c	;volatile
  2367  000404                     
  2368                           ;hw2_1.c: 428:                     PORTJ = health_points[2];
  2369  000404  C02B  FF88         	movff	_health_points+2,3976	;volatile
  2370  000408                     l1861:
  2371                           
  2372                           ;hw2_1.c: 430:                 if(level == 3){
  2373  000408  0E03               	movlw	3
  2374  00040A  1825               	xorwf	_level^0,w,c
  2375  00040C  1026               	iorwf	(_level+1)^0,w,c
  2376  00040E  A4D8               	btfss	status,2,c
  2377  000410  EF0C  F002         	goto	u1121
  2378  000414  EF0E  F002         	goto	u1120
  2379  000418                     u1121:
  2380  000418  EF9D  F002         	goto	l262
  2381  00041C                     u1120:
  2382  00041C  EF4C  F000         	goto	l1639
  2383  000420                     l1869:
  2384                           
  2385                           ;hw2_1.c: 437:                 PORTH = 0x01;
  2386  000420  0E01               	movlw	1
  2387  000422  6E87               	movwf	135,c	;volatile
  2388                           
  2389                           ;hw2_1.c: 438:                 PORTJ = L;
  2390  000424  0E38               	movlw	56
  2391  000426  6E88               	movwf	136,c	;volatile
  2392  000428                     
  2393                           ;hw2_1.c: 439:                 DELAY_ms(1);
  2394  000428  0E00               	movlw	0
  2395  00042A  6E42               	movwf	(DELAY_ms@ms_Count+1)^0,c
  2396  00042C  0E01               	movlw	1
  2397  00042E  6E41               	movwf	DELAY_ms@ms_Count^0,c
  2398  000430  EC9B  F005         	call	_DELAY_ms	;wreg free
  2399  000434                     
  2400                           ;hw2_1.c: 440:                 PORTH = 0x02;
  2401  000434  0E02               	movlw	2
  2402  000436  6E87               	movwf	135,c	;volatile
  2403  000438                     
  2404                           ;hw2_1.c: 441:                 PORTJ = O;
  2405  000438  0E3F               	movlw	63
  2406  00043A  6E88               	movwf	136,c	;volatile
  2407  00043C                     
  2408                           ;hw2_1.c: 442:                 DELAY_ms(1);
  2409  00043C  0E00               	movlw	0
  2410  00043E  6E42               	movwf	(DELAY_ms@ms_Count+1)^0,c
  2411  000440  0E01               	movlw	1
  2412  000442  6E41               	movwf	DELAY_ms@ms_Count^0,c
  2413  000444  EC9B  F005         	call	_DELAY_ms	;wreg free
  2414                           
  2415                           ;hw2_1.c: 443:                 PORTH = 0x04;
  2416  000448  0E04               	movlw	4
  2417  00044A  6E87               	movwf	135,c	;volatile
  2418                           
  2419                           ;hw2_1.c: 444:                 PORTJ = S;
  2420  00044C  0E6D               	movlw	109
  2421  00044E  6E88               	movwf	136,c	;volatile
  2422  000450                     
  2423                           ;hw2_1.c: 445:                 DELAY_ms(1);
  2424  000450  0E00               	movlw	0
  2425  000452  6E42               	movwf	(DELAY_ms@ms_Count+1)^0,c
  2426  000454  0E01               	movlw	1
  2427  000456  6E41               	movwf	DELAY_ms@ms_Count^0,c
  2428  000458  EC9B  F005         	call	_DELAY_ms	;wreg free
  2429  00045C                     
  2430                           ;hw2_1.c: 446:                 PORTH = 0x08;
  2431  00045C  0E08               	movlw	8
  2432  00045E  6E87               	movwf	135,c	;volatile
  2433  000460                     
  2434                           ;hw2_1.c: 447:                 PORTJ = E;
  2435  000460  0E79               	movlw	121
  2436  000462  6E88               	movwf	136,c	;volatile
  2437  000464                     l1885:
  2438                           
  2439                           ;hw2_1.c: 448:                 DELAY_ms(1);
  2440  000464  0E00               	movlw	0
  2441  000466  6E42               	movwf	(DELAY_ms@ms_Count+1)^0,c
  2442  000468  0E01               	movlw	1
  2443  00046A  6E41               	movwf	DELAY_ms@ms_Count^0,c
  2444  00046C  EC9B  F005         	call	_DELAY_ms	;wreg free
  2445                           
  2446                           ;hw2_1.c: 449:                 break;
  2447  000470  EF9D  F002         	goto	l262
  2448  000474                     l1905:
  2449                           
  2450                           ;hw2_1.c: 465:                 PORTH = 0x01;
  2451  000474  0E01               	movlw	1
  2452  000476  6E87               	movwf	135,c	;volatile
  2453                           
  2454                           ;hw2_1.c: 466:                 PORTJ = E;
  2455  000478  0E79               	movlw	121
  2456  00047A  6E88               	movwf	136,c	;volatile
  2457  00047C                     
  2458                           ;hw2_1.c: 467:                 DELAY_ms(1);
  2459  00047C  0E00               	movlw	0
  2460  00047E  6E42               	movwf	(DELAY_ms@ms_Count+1)^0,c
  2461  000480  0E01               	movlw	1
  2462  000482  6E41               	movwf	DELAY_ms@ms_Count^0,c
  2463  000484  EC9B  F005         	call	_DELAY_ms	;wreg free
  2464  000488                     
  2465                           ;hw2_1.c: 468:                 PORTH = 0x02;
  2466  000488  0E02               	movlw	2
  2467  00048A  6E87               	movwf	135,c	;volatile
  2468  00048C                     
  2469                           ;hw2_1.c: 469:                 PORTJ = n;
  2470  00048C  0E54               	movlw	84
  2471  00048E  6E88               	movwf	136,c	;volatile
  2472  000490                     
  2473                           ;hw2_1.c: 470:                 DELAY_ms(1);
  2474  000490  0E00               	movlw	0
  2475  000492  6E42               	movwf	(DELAY_ms@ms_Count+1)^0,c
  2476  000494  0E01               	movlw	1
  2477  000496  6E41               	movwf	DELAY_ms@ms_Count^0,c
  2478  000498  EC9B  F005         	call	_DELAY_ms	;wreg free
  2479                           
  2480                           ;hw2_1.c: 471:                 PORTH = 0x04;
  2481  00049C  0E04               	movlw	4
  2482  00049E  6E87               	movwf	135,c	;volatile
  2483                           
  2484                           ;hw2_1.c: 472:                 PORTJ = d;
  2485  0004A0  0E5E               	movlw	94
  2486  0004A2  6E88               	movwf	136,c	;volatile
  2487  0004A4  EF32  F002         	goto	l1885
  2488  0004A8                     l1919:
  2489  0004A8  C049  F047         	movff	_health,??_display_task
  2490  0004AC  C04A  F048         	movff	_health+1,??_display_task+1
  2491                           
  2492                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  2493                           ; Switch size 1, requested type "simple"
  2494                           ; Number of cases is 2, Range of values is 0 to 255
  2495                           ; switch strategies available:
  2496                           ; Name         Instructions Cycles
  2497                           ; simple_byte            7     4 (average)
  2498                           ;	Chosen strategy is simple_byte
  2499  0004B0  5048               	movf	(??_display_task+1)^0,w,c
  2500  0004B2  0A00               	xorlw	0	; case 0
  2501  0004B4  B4D8               	btfsc	status,2,c
  2502  0004B6  EF63  F002         	goto	l1961
  2503  0004BA  0AFF               	xorlw	255	; case 255
  2504  0004BC  B4D8               	btfsc	status,2,c
  2505  0004BE  EF92  F002         	goto	l1963
  2506  0004C2  EF9D  F002         	goto	l262
  2507  0004C6                     l1961:
  2508                           
  2509                           ; Switch size 1, requested type "simple"
  2510                           ; Number of cases is 11, Range of values is 0 to 10
  2511                           ; switch strategies available:
  2512                           ; Name         Instructions Cycles
  2513                           ; simple_byte           34    18 (average)
  2514                           ;	Chosen strategy is simple_byte
  2515  0004C6  5047               	movf	??_display_task^0,w,c
  2516  0004C8  0A00               	xorlw	0	; case 0
  2517  0004CA  B4D8               	btfsc	status,2,c
  2518  0004CC  EF10  F002         	goto	l1869
  2519  0004D0  0A01               	xorlw	1	; case 1
  2520  0004D2  B4D8               	btfsc	status,2,c
  2521  0004D4  EFD9  F001         	goto	l1841
  2522  0004D8  0A03               	xorlw	3	; case 2
  2523  0004DA  B4D8               	btfsc	status,2,c
  2524  0004DC  EFA2  F001         	goto	l1813
  2525  0004E0  0A01               	xorlw	1	; case 3
  2526  0004E2  B4D8               	btfsc	status,2,c
  2527  0004E4  EF6B  F001         	goto	l1785
  2528  0004E8  0A07               	xorlw	7	; case 4
  2529  0004EA  B4D8               	btfsc	status,2,c
  2530  0004EC  EF34  F001         	goto	l1757
  2531  0004F0  0A01               	xorlw	1	; case 5
  2532  0004F2  B4D8               	btfsc	status,2,c
  2533  0004F4  EFFD  F000         	goto	l1729
  2534  0004F8  0A03               	xorlw	3	; case 6
  2535  0004FA  B4D8               	btfsc	status,2,c
  2536  0004FC  EFC6  F000         	goto	l1701
  2537  000500  0A01               	xorlw	1	; case 7
  2538  000502  B4D8               	btfsc	status,2,c
  2539  000504  EF8F  F000         	goto	l1673
  2540  000508  0A0F               	xorlw	15	; case 8
  2541  00050A  B4D8               	btfsc	status,2,c
  2542  00050C  EF58  F000         	goto	l1645
  2543  000510  0A01               	xorlw	1	; case 9
  2544  000512  B4D8               	btfsc	status,2,c
  2545  000514  EF17  F000         	goto	l1617
  2546  000518  0A03               	xorlw	3	; case 10
  2547  00051A  B4D8               	btfsc	status,2,c
  2548  00051C  EF9D  F002         	goto	l262
  2549  000520  EF9D  F002         	goto	l262
  2550  000524                     l1963:
  2551                           
  2552                           ; Switch size 1, requested type "simple"
  2553                           ; Number of cases is 2, Range of values is 254 to 255
  2554                           ; switch strategies available:
  2555                           ; Name         Instructions Cycles
  2556                           ; simple_byte            7     4 (average)
  2557                           ;	Chosen strategy is simple_byte
  2558  000524  5047               	movf	??_display_task^0,w,c
  2559  000526  0AFE               	xorlw	254	; case 254
  2560  000528  B4D8               	btfsc	status,2,c
  2561  00052A  EF3A  F002         	goto	l1905
  2562  00052E  0A01               	xorlw	1	; case 255
  2563  000530  B4D8               	btfsc	status,2,c
  2564  000532  EF10  F002         	goto	l1869
  2565  000536  EF9D  F002         	goto	l262
  2566  00053A                     l262:
  2567  00053A  0012               	return		;funcret
  2568  00053C                     __end_of_display_task:
  2569                           	callstack 0
  2570                           
  2571 ;; *************** function _DELAY_ms *****************
  2572 ;; Defined at:
  2573 ;;		line 135 in file "hw2_1.c"
  2574 ;; Parameters:    Size  Location     Type
  2575 ;;  ms_Count        2    2[COMRAM] unsigned int 
  2576 ;; Auto vars:     Size  Location     Type
  2577 ;;  j               2    6[COMRAM] unsigned int 
  2578 ;;  i               2    4[COMRAM] unsigned int 
  2579 ;; Return value:  Size  Location     Type
  2580 ;;                  1    wreg      void 
  2581 ;; Registers used:
  2582 ;;		wreg, status,2, status,0
  2583 ;; Tracked objects:
  2584 ;;		On entry : 0/0
  2585 ;;		On exit  : 0/0
  2586 ;;		Unchanged: 0/0
  2587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2588 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2589 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2591 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2592 ;;Total ram usage:        6 bytes
  2593 ;; Hardware stack levels used:    1
  2594 ;; Hardware stack levels required when called:    4
  2595 ;; This function calls:
  2596 ;;		Nothing
  2597 ;; This function is called by:
  2598 ;;		_display_task
  2599 ;; This function uses a non-reentrant model
  2600 ;;
  2601                           
  2602                           	psect	text13
  2603  000B36                     __ptext13:
  2604                           	callstack 0
  2605  000B36                     _DELAY_ms:
  2606                           	callstack 25
  2607  000B36                     
  2608                           ;hw2_1.c: 135: void DELAY_ms(unsigned int ms_Count);hw2_1.c: 136: {;hw2_1.c: 137:     un
      +                          signed int i,j;;hw2_1.c: 138:     for(i=0;i<ms_Count;i++)
  2609  000B36  0E00               	movlw	0
  2610  000B38  6E44               	movwf	(DELAY_ms@i+1)^0,c
  2611  000B3A  0E00               	movlw	0
  2612  000B3C  6E43               	movwf	DELAY_ms@i^0,c
  2613  000B3E  EFB4  F005         	goto	l1555
  2614  000B42                     l1543:
  2615                           
  2616                           ;hw2_1.c: 139:     {;hw2_1.c: 140:         for(j=0;j<10;j++);
  2617  000B42  0E00               	movlw	0
  2618  000B44  6E46               	movwf	(DELAY_ms@j+1)^0,c
  2619  000B46  0E00               	movlw	0
  2620  000B48  6E45               	movwf	DELAY_ms@j^0,c
  2621  000B4A                     l1549:
  2622  000B4A  4A45               	infsnz	DELAY_ms@j^0,f,c
  2623  000B4C  2A46               	incf	(DELAY_ms@j+1)^0,f,c
  2624  000B4E  5046               	movf	(DELAY_ms@j+1)^0,w,c
  2625  000B50  E109               	bnz	u770
  2626  000B52  0E0A               	movlw	10
  2627  000B54  5C45               	subwf	DELAY_ms@j^0,w,c
  2628  000B56  A0D8               	btfss	status,0,c
  2629  000B58  EFB0  F005         	goto	u771
  2630  000B5C  EFB2  F005         	goto	u770
  2631  000B60                     u771:
  2632  000B60  EFA5  F005         	goto	l1549
  2633  000B64                     u770:
  2634  000B64                     
  2635                           ;hw2_1.c: 141:     }
  2636  000B64  4A43               	infsnz	DELAY_ms@i^0,f,c
  2637  000B66  2A44               	incf	(DELAY_ms@i+1)^0,f,c
  2638  000B68                     l1555:
  2639  000B68  5041               	movf	DELAY_ms@ms_Count^0,w,c
  2640  000B6A  5C43               	subwf	DELAY_ms@i^0,w,c
  2641  000B6C  5042               	movf	(DELAY_ms@ms_Count+1)^0,w,c
  2642  000B6E  5844               	subwfb	(DELAY_ms@i+1)^0,w,c
  2643  000B70  A0D8               	btfss	status,0,c
  2644  000B72  EFBD  F005         	goto	u781
  2645  000B76  EFBF  F005         	goto	u780
  2646  000B7A                     u781:
  2647  000B7A  EFA1  F005         	goto	l1543
  2648  000B7E                     u780:
  2649  000B7E  0012               	return		;funcret
  2650  000B80                     __end_of_DELAY_ms:
  2651                           	callstack 0
  2652                           
  2653 ;; *************** function _check_rc0 *****************
  2654 ;; Defined at:
  2655 ;;		line 490 in file "hw2_1.c"
  2656 ;; Parameters:    Size  Location     Type
  2657 ;;		None
  2658 ;; Auto vars:     Size  Location     Type
  2659 ;;		None
  2660 ;; Return value:  Size  Location     Type
  2661 ;;                  1    wreg      void 
  2662 ;; Registers used:
  2663 ;;		wreg, status,2, status,0, cstack
  2664 ;; Tracked objects:
  2665 ;;		On entry : 0/0
  2666 ;;		On exit  : 0/0
  2667 ;;		Unchanged: 0/0
  2668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2673 ;;Total ram usage:        0 bytes
  2674 ;; Hardware stack levels used:    1
  2675 ;; Hardware stack levels required when called:    5
  2676 ;; This function calls:
  2677 ;;		_read_tmr1
  2678 ;; This function is called by:
  2679 ;;		_main
  2680 ;; This function uses a non-reentrant model
  2681 ;;
  2682                           
  2683                           	psect	text14
  2684  000A8A                     __ptext14:
  2685                           	callstack 0
  2686  000A8A                     _check_rc0:
  2687                           	callstack 25
  2688  000A8A                     
  2689                           ;hw2_1.c: 491:     if(PORTC == 0x01 && start_flag == 0){
  2690  000A8A  0482               	decf	130,w,c	;volatile
  2691  000A8C  A4D8               	btfss	status,2,c
  2692  000A8E  EF4B  F005         	goto	u681
  2693  000A92  EF4D  F005         	goto	u680
  2694  000A96                     u681:
  2695  000A96  EF73  F005         	goto	l269
  2696  000A9A                     u680:
  2697  000A9A  5009               	movf	_start_flag^0,w,c
  2698  000A9C  100A               	iorwf	(_start_flag+1)^0,w,c
  2699  000A9E  A4D8               	btfss	status,2,c
  2700  000AA0  EF54  F005         	goto	u691
  2701  000AA4  EF56  F005         	goto	u690
  2702  000AA8                     u691:
  2703  000AA8  EF73  F005         	goto	l269
  2704  000AAC                     u690:
  2705  000AAC                     
  2706                           ;hw2_1.c: 492:         health = 9;
  2707  000AAC  0E00               	movlw	0
  2708  000AAE  6E4A               	movwf	(_health+1)^0,c
  2709  000AB0  0E09               	movlw	9
  2710  000AB2  6E49               	movwf	_health^0,c
  2711                           
  2712                           ;hw2_1.c: 493:         note_count = 5;
  2713  000AB4  0E00               	movlw	0
  2714  000AB6  6E24               	movwf	(_note_count+1)^0,c
  2715  000AB8  0E05               	movlw	5
  2716  000ABA  6E23               	movwf	_note_count^0,c
  2717                           
  2718                           ;hw2_1.c: 494:         level = 1;
  2719  000ABC  0E00               	movlw	0
  2720  000ABE  6E26               	movwf	(_level+1)^0,c
  2721  000AC0  0E01               	movlw	1
  2722  000AC2  6E25               	movwf	_level^0,c
  2723                           
  2724                           ;hw2_1.c: 495:         wait = 0;
  2725  000AC4  0E00               	movlw	0
  2726  000AC6  6E1C               	movwf	(_wait+1)^0,c
  2727  000AC8  0E00               	movlw	0
  2728  000ACA  6E1B               	movwf	_wait^0,c
  2729                           
  2730                           ;hw2_1.c: 496:         note_generate_flag =1;
  2731  000ACC  0E00               	movlw	0
  2732  000ACE  6E10               	movwf	(_note_generate_flag+1)^0,c
  2733  000AD0  0E01               	movlw	1
  2734  000AD2  6E0F               	movwf	_note_generate_flag^0,c
  2735  000AD4                     
  2736                           ;hw2_1.c: 497:         read_tmr1();
  2737  000AD4  EC29  F006         	call	_read_tmr1	;wreg free
  2738  000AD8                     
  2739                           ;hw2_1.c: 498:         start_flag = 1;
  2740  000AD8  0E00               	movlw	0
  2741  000ADA  6E0A               	movwf	(_start_flag+1)^0,c
  2742  000ADC  0E01               	movlw	1
  2743  000ADE  6E09               	movwf	_start_flag^0,c
  2744  000AE0                     
  2745                           ;hw2_1.c: 499:         TRISC = 0x00;
  2746  000AE0  0E00               	movlw	0
  2747  000AE2  6E94               	movwf	148,c	;volatile
  2748  000AE4                     
  2749                           ;hw2_1.c: 500:         T0CONbits.TMR0ON = 1;
  2750  000AE4  8ED5               	bsf	213,7,c	;volatile
  2751  000AE6                     l269:
  2752  000AE6  0012               	return		;funcret
  2753  000AE8                     __end_of_check_rc0:
  2754                           	callstack 0
  2755                           
  2756 ;; *************** function _read_tmr1 *****************
  2757 ;; Defined at:
  2758 ;;		line 220 in file "hw2_1.c"
  2759 ;; Parameters:    Size  Location     Type
  2760 ;;		None
  2761 ;; Auto vars:     Size  Location     Type
  2762 ;;		None
  2763 ;; Return value:  Size  Location     Type
  2764 ;;                  1    wreg      void 
  2765 ;; Registers used:
  2766 ;;		wreg, status,2, status,0
  2767 ;; Tracked objects:
  2768 ;;		On entry : 0/0
  2769 ;;		On exit  : 0/0
  2770 ;;		Unchanged: 0/0
  2771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2774 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2775 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2776 ;;Total ram usage:        2 bytes
  2777 ;; Hardware stack levels used:    1
  2778 ;; Hardware stack levels required when called:    4
  2779 ;; This function calls:
  2780 ;;		Nothing
  2781 ;; This function is called by:
  2782 ;;		_check_rc0
  2783 ;; This function uses a non-reentrant model
  2784 ;;
  2785                           
  2786                           	psect	text15
  2787  000C52                     __ptext15:
  2788                           	callstack 0
  2789  000C52                     _read_tmr1:
  2790                           	callstack 25
  2791  000C52                     
  2792                           ;hw2_1.c: 221:     low = TMR1L;
  2793  000C52  CFCE F01D          	movff	4046,_low	;volatile
  2794  000C56  6A1E               	clrf	(_low+1)^0,c
  2795                           
  2796                           ;hw2_1.c: 222:     high = TMR1H;
  2797  000C58  CFCF F01F          	movff	4047,_high	;volatile
  2798  000C5C  6A20               	clrf	(_high+1)^0,c
  2799                           
  2800                           ;hw2_1.c: 223:     initial_timer1 = high;
  2801  000C5E  C01F  F021         	movff	_high,_initial_timer1
  2802  000C62  C020  F022         	movff	_high+1,_initial_timer1+1
  2803  000C66                     
  2804                           ;hw2_1.c: 224:     initial_timer1 = (initial_timer1<<8)|low;
  2805  000C66  5021               	movf	_initial_timer1^0,w,c
  2806  000C68  6E42               	movwf	(??_read_tmr1+1)^0,c
  2807  000C6A  6A41               	clrf	??_read_tmr1^0,c
  2808  000C6C  501D               	movf	_low^0,w,c
  2809  000C6E  1041               	iorwf	??_read_tmr1^0,w,c
  2810  000C70  6E21               	movwf	_initial_timer1^0,c
  2811  000C72  501E               	movf	(_low+1)^0,w,c
  2812  000C74  1042               	iorwf	(??_read_tmr1+1)^0,w,c
  2813  000C76  6E22               	movwf	(_initial_timer1+1)^0,c
  2814  000C78  0012               	return		;funcret
  2815  000C7A                     __end_of_read_tmr1:
  2816                           	callstack 0
  2817                           
  2818 ;; *************** function _lowPriorityISR *****************
  2819 ;; Defined at:
  2820 ;;		line 117 in file "hw2_1.c"
  2821 ;; Parameters:    Size  Location     Type
  2822 ;;		None
  2823 ;; Auto vars:     Size  Location     Type
  2824 ;;		None
  2825 ;; Return value:  Size  Location     Type
  2826 ;;                  1    wreg      void 
  2827 ;; Registers used:
  2828 ;;		None
  2829 ;; Tracked objects:
  2830 ;;		On entry : 0/0
  2831 ;;		On exit  : 0/0
  2832 ;;		Unchanged: 0/0
  2833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2836 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2837 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2838 ;;Total ram usage:        1 bytes
  2839 ;; Hardware stack levels used:    1
  2840 ;; Hardware stack levels required when called:    3
  2841 ;; This function calls:
  2842 ;;		Nothing
  2843 ;; This function is called by:
  2844 ;;		Interrupt level 1
  2845 ;; This function uses a non-reentrant model
  2846 ;;
  2847                           
  2848                           	psect	intcodelo
  2849  000018                     __pintcodelo:
  2850                           	callstack 0
  2851  000018                     _lowPriorityISR:
  2852                           	callstack 25
  2853                           
  2854                           ;incstack = 0
  2855  000018  804B               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  2856  00001A  CFE0 F040          	movff	bsr,??_lowPriorityISR
  2857  00001E  C040  FFE0         	movff	??_lowPriorityISR,bsr
  2858  000022  904B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2859  000024  0010               	retfie	
  2860  000026                     __end_of_lowPriorityISR:
  2861                           	callstack 0
  2862                           
  2863 ;; *************** function _highPriorityISR *****************
  2864 ;; Defined at:
  2865 ;;		line 93 in file "hw2_1.c"
  2866 ;; Parameters:    Size  Location     Type
  2867 ;;		None
  2868 ;; Auto vars:     Size  Location     Type
  2869 ;;		None
  2870 ;; Return value:  Size  Location     Type
  2871 ;;                  1    wreg      void 
  2872 ;; Registers used:
  2873 ;;		wreg, status,2, status,0, cstack
  2874 ;; Tracked objects:
  2875 ;;		On entry : 0/0
  2876 ;;		On exit  : 0/0
  2877 ;;		Unchanged: 0/0
  2878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2881 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2882 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2883 ;;Total ram usage:        1 bytes
  2884 ;; Hardware stack levels used:    1
  2885 ;; Hardware stack levels required when called:    2
  2886 ;; This function calls:
  2887 ;;		_tmr0_int
  2888 ;; This function is called by:
  2889 ;;		Interrupt level 2
  2890 ;; This function uses a non-reentrant model
  2891 ;;
  2892                           
  2893                           	psect	intcode
  2894  000008                     __pintcode:
  2895                           	callstack 0
  2896  000008                     _highPriorityISR:
  2897                           	callstack 25
  2898                           
  2899                           ;incstack = 0
  2900  000008  824B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2901  00000A  ED4C  F004         	call	int_func,f	;refresh shadow registers
  2902                           
  2903                           	psect	intcode_body
  2904  000898                     __pintcode_body:
  2905                           	callstack 25
  2906  000898                     int_func:
  2907                           	callstack 25
  2908  000898  0006               	pop		; remove dummy address from shadow register refresh
  2909  00089A                     
  2910                           ;hw2_1.c: 94:     if(INTCONbits.T0IE) {
  2911  00089A  AAF2               	btfss	242,5,c	;volatile
  2912  00089C  EF52  F004         	goto	i2u70_41
  2913  0008A0  EF54  F004         	goto	i2u70_40
  2914  0008A4                     i2u70_41:
  2915  0008A4  EF9B  F004         	goto	i2l149
  2916  0008A8                     i2u70_40:
  2917  0008A8                     
  2918                           ;hw2_1.c: 95:         if(t_count < count_cap){
  2919  0008A8  5035               	movf	_count_cap^0,w,c
  2920  0008AA  5C27               	subwf	_t_count^0,w,c
  2921  0008AC  5028               	movf	(_t_count+1)^0,w,c
  2922  0008AE  0A80               	xorlw	128
  2923  0008B0  6E3F               	movwf	??_highPriorityISR^0,c
  2924  0008B2  5036               	movf	(_count_cap+1)^0,w,c
  2925  0008B4  0A80               	xorlw	128
  2926  0008B6  583F               	subwfb	??_highPriorityISR^0,w,c
  2927  0008B8  B0D8               	btfsc	status,0,c
  2928  0008BA  EF61  F004         	goto	i2u71_41
  2929  0008BE  EF63  F004         	goto	i2u71_40
  2930  0008C2                     i2u71_41:
  2931  0008C2  EF6C  F004         	goto	i2l1493
  2932  0008C6                     i2u71_40:
  2933  0008C6                     
  2934                           ;hw2_1.c: 96:             t_count++;
  2935  0008C6  4A27               	infsnz	_t_count^0,f,c
  2936  0008C8  2A28               	incf	(_t_count+1)^0,f,c
  2937  0008CA                     
  2938                           ;hw2_1.c: 97:             TMR0 = level_init & 0xff;
  2939  0008CA  5037               	movf	_level_init^0,w,c
  2940  0008CC  6ED6               	movwf	214,c	;volatile
  2941  0008CE  6AD7               	clrf	215,c	;volatile
  2942  0008D0                     
  2943                           ;hw2_1.c: 98:             INTCONbits.T0IF = 0;
  2944  0008D0  94F2               	bcf	242,2,c	;volatile
  2945  0008D2                     
  2946                           ;hw2_1.c: 99:             ADCON0bits.GO = 1;
  2947  0008D2  82C2               	bsf	194,1,c	;volatile
  2948                           
  2949                           ;hw2_1.c: 101:         }
  2950  0008D4  EF9B  F004         	goto	i2l149
  2951  0008D8                     i2l1493:
  2952                           
  2953                           ;hw2_1.c: 103:             t_count=0;
  2954  0008D8  0E00               	movlw	0
  2955  0008DA  6E28               	movwf	(_t_count+1)^0,c
  2956  0008DC  0E00               	movlw	0
  2957  0008DE  6E27               	movwf	_t_count^0,c
  2958  0008E0                     
  2959                           ;hw2_1.c: 104:             if(start_flag == 1){
  2960  0008E0  0409               	decf	_start_flag^0,w,c
  2961  0008E2  100A               	iorwf	(_start_flag+1)^0,w,c
  2962  0008E4  A4D8               	btfss	status,2,c
  2963  0008E6  EF77  F004         	goto	i2u72_41
  2964  0008EA  EF79  F004         	goto	i2u72_40
  2965  0008EE                     i2u72_41:
  2966  0008EE  EF9B  F004         	goto	i2l149
  2967  0008F2                     i2u72_40:
  2968  0008F2                     
  2969                           ;hw2_1.c: 105:                 if(LATF > 0 && input_G == 0x00 ){
  2970  0008F2  508E               	movf	142,w,c	;volatile
  2971  0008F4  B4D8               	btfsc	status,2,c
  2972  0008F6  EF7F  F004         	goto	i2u73_41
  2973  0008FA  EF81  F004         	goto	i2u73_40
  2974  0008FE                     i2u73_41:
  2975  0008FE  EF8D  F004         	goto	i2l1503
  2976  000902                     i2u73_40:
  2977  000902  5011               	movf	_input_G^0,w,c
  2978  000904  1012               	iorwf	(_input_G+1)^0,w,c
  2979  000906  A4D8               	btfss	status,2,c
  2980  000908  EF88  F004         	goto	i2u74_41
  2981  00090C  EF8A  F004         	goto	i2u74_40
  2982  000910                     i2u74_41:
  2983  000910  EF8D  F004         	goto	i2l1503
  2984  000914                     i2u74_40:
  2985  000914                     
  2986                           ;hw2_1.c: 106:                     health -=1;
  2987  000914  0649               	decf	_health^0,f,c
  2988  000916  A0D8               	btfss	status,0,c
  2989  000918  064A               	decf	(_health+1)^0,f,c
  2990  00091A                     i2l1503:
  2991                           
  2992                           ;hw2_1.c: 108:                 tmr0_int();
  2993  00091A  EC11  F006         	call	_tmr0_int	;wreg free
  2994  00091E                     
  2995                           ;hw2_1.c: 109:                 input_compare_flag = 1;
  2996  00091E  0E00               	movlw	0
  2997  000920  6E14               	movwf	(_input_compare_flag+1)^0,c
  2998  000922  0E01               	movlw	1
  2999  000924  6E13               	movwf	_input_compare_flag^0,c
  3000  000926                     
  3001                           ;hw2_1.c: 111:                 input_G = 0x00;
  3002  000926  0E00               	movlw	0
  3003  000928  6E12               	movwf	(_input_G+1)^0,c
  3004  00092A  0E00               	movlw	0
  3005  00092C  6E11               	movwf	_input_G^0,c
  3006  00092E                     
  3007                           ;hw2_1.c: 112:                 note_generate_flag = 1;
  3008  00092E  0E00               	movlw	0
  3009  000930  6E10               	movwf	(_note_generate_flag+1)^0,c
  3010  000932  0E01               	movlw	1
  3011  000934  6E0F               	movwf	_note_generate_flag^0,c
  3012  000936                     i2l149:
  3013  000936  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3014  000938  0011               	retfie		f
  3015  00093A                     __end_of_highPriorityISR:
  3016                           	callstack 0
  3017                           
  3018 ;; *************** function _tmr0_int *****************
  3019 ;; Defined at:
  3020 ;;		line 82 in file "hw2_1.c"
  3021 ;; Parameters:    Size  Location     Type
  3022 ;;		None
  3023 ;; Auto vars:     Size  Location     Type
  3024 ;;		None
  3025 ;; Return value:  Size  Location     Type
  3026 ;;                  1    wreg      void 
  3027 ;; Registers used:
  3028 ;;		wreg, status,2, status,0, cstack
  3029 ;; Tracked objects:
  3030 ;;		On entry : 0/0
  3031 ;;		On exit  : 0/0
  3032 ;;		Unchanged: 0/0
  3033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3038 ;;Total ram usage:        0 bytes
  3039 ;; Hardware stack levels used:    1
  3040 ;; Hardware stack levels required when called:    1
  3041 ;; This function calls:
  3042 ;;		_iterate_notes
  3043 ;; This function is called by:
  3044 ;;		_highPriorityISR
  3045 ;; This function uses a non-reentrant model
  3046 ;;
  3047                           
  3048                           	psect	text18
  3049  000C22                     __ptext18:
  3050                           	callstack 0
  3051  000C22                     _tmr0_int:
  3052                           	callstack 25
  3053  000C22                     
  3054                           ;hw2_1.c: 83:     INTCONbits.T0IF = 0;
  3055  000C22  94F2               	bcf	242,2,c	;volatile
  3056  000C24                     
  3057                           ;hw2_1.c: 84:     iterate_notes();
  3058  000C24  EC3D  F006         	call	_iterate_notes	;wreg free
  3059  000C28                     
  3060                           ;hw2_1.c: 85:     TMR0 = level_init & 0xff;
  3061  000C28  5037               	movf	_level_init^0,w,c
  3062  000C2A  6ED6               	movwf	214,c	;volatile
  3063  000C2C  6AD7               	clrf	215,c	;volatile
  3064  000C2E                     
  3065                           ;hw2_1.c: 87:     if(note_count != 0){ note_count--;}
  3066  000C2E  5023               	movf	_note_count^0,w,c
  3067  000C30  1024               	iorwf	(_note_count+1)^0,w,c
  3068  000C32  B4D8               	btfsc	status,2,c
  3069  000C34  EF1E  F006         	goto	i2u8_41
  3070  000C38  EF20  F006         	goto	i2u8_40
  3071  000C3C                     i2u8_41:
  3072  000C3C  EF25  F006         	goto	i2l1033
  3073  000C40                     i2u8_40:
  3074  000C40  0623               	decf	_note_count^0,f,c
  3075  000C42  A0D8               	btfss	status,0,c
  3076  000C44  0624               	decf	(_note_count+1)^0,f,c
  3077  000C46  EF27  F006         	goto	i2l1035
  3078  000C4A                     i2l1033:
  3079  000C4A  0E00               	movlw	0
  3080  000C4C  6E80               	movwf	128,c	;volatile
  3081  000C4E                     i2l1035:
  3082                           
  3083                           ;hw2_1.c: 89:     ADCON0bits.GO = 1;
  3084  000C4E  82C2               	bsf	194,1,c	;volatile
  3085  000C50  0012               	return		;funcret
  3086  000C52                     __end_of_tmr0_int:
  3087                           	callstack 0
  3088                           
  3089 ;; *************** function _iterate_notes *****************
  3090 ;; Defined at:
  3091 ;;		line 73 in file "hw2_1.c"
  3092 ;; Parameters:    Size  Location     Type
  3093 ;;		None
  3094 ;; Auto vars:     Size  Location     Type
  3095 ;;		None
  3096 ;; Return value:  Size  Location     Type
  3097 ;;                  1    wreg      void 
  3098 ;; Registers used:
  3099 ;;		None
  3100 ;; Tracked objects:
  3101 ;;		On entry : 0/0
  3102 ;;		On exit  : 0/0
  3103 ;;		Unchanged: 0/0
  3104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3109 ;;Total ram usage:        0 bytes
  3110 ;; Hardware stack levels used:    1
  3111 ;; This function calls:
  3112 ;;		Nothing
  3113 ;; This function is called by:
  3114 ;;		_tmr0_int
  3115 ;; This function uses a non-reentrant model
  3116 ;;
  3117                           
  3118                           	psect	text19
  3119  000C7A                     __ptext19:
  3120                           	callstack 0
  3121  000C7A                     _iterate_notes:
  3122                           	callstack 25
  3123  000C7A                     
  3124                           ;hw2_1.c: 74:     PORTF = LATE;
  3125  000C7A  CF8D FF85          	movff	3981,3973	;volatile
  3126                           
  3127                           ;hw2_1.c: 75:     PORTE = LATD;
  3128  000C7E  CF8C FF84          	movff	3980,3972	;volatile
  3129                           
  3130                           ;hw2_1.c: 76:     PORTD = LATC;
  3131  000C82  CF8B FF83          	movff	3979,3971	;volatile
  3132                           
  3133                           ;hw2_1.c: 77:     PORTC = LATB;
  3134  000C86  CF8A FF82          	movff	3978,3970	;volatile
  3135                           
  3136                           ;hw2_1.c: 78:     PORTB = LATA;
  3137  000C8A  CF89 FF81          	movff	3977,3969	;volatile
  3138                           
  3139                           ;hw2_1.c: 79:     LATA = RA;
  3140  000C8E  C00D  FF89         	movff	_RA,3977	;volatile
  3141  000C92  0012               	return		;funcret
  3142  000C94                     __end_of_iterate_notes:
  3143                           	callstack 0
  3144  0000                     
  3145                           	psect	rparam
  3146  0000                     
  3147                           	psect	temp
  3148  00004B                     btemp:
  3149                           	callstack 0
  3150  00004B                     	ds	1
  3151  0000                     int$flags	set	btemp
  3152  0000                     wtemp8	set	btemp+1
  3153  0000                     ttemp5	set	btemp+1
  3154  0000                     ttemp6	set	btemp+4
  3155  0000                     ttemp7	set	btemp+8
  3156                           
  3157                           	psect	idloc
  3158                           
  3159                           ;Config register IDLOC0 @ 0x200000
  3160                           ;	unspecified, using default values
  3161  200000                     	org	2097152
  3162  200000  FF                 	db	255
  3163                           
  3164                           ;Config register IDLOC1 @ 0x200001
  3165                           ;	unspecified, using default values
  3166  200001                     	org	2097153
  3167  200001  FF                 	db	255
  3168                           
  3169                           ;Config register IDLOC2 @ 0x200002
  3170                           ;	unspecified, using default values
  3171  200002                     	org	2097154
  3172  200002  FF                 	db	255
  3173                           
  3174                           ;Config register IDLOC3 @ 0x200003
  3175                           ;	unspecified, using default values
  3176  200003                     	org	2097155
  3177  200003  FF                 	db	255
  3178                           
  3179                           ;Config register IDLOC4 @ 0x200004
  3180                           ;	unspecified, using default values
  3181  200004                     	org	2097156
  3182  200004  FF                 	db	255
  3183                           
  3184                           ;Config register IDLOC5 @ 0x200005
  3185                           ;	unspecified, using default values
  3186  200005                     	org	2097157
  3187  200005  FF                 	db	255
  3188                           
  3189                           ;Config register IDLOC6 @ 0x200006
  3190                           ;	unspecified, using default values
  3191  200006                     	org	2097158
  3192  200006  FF                 	db	255
  3193                           
  3194                           ;Config register IDLOC7 @ 0x200007
  3195                           ;	unspecified, using default values
  3196  200007                     	org	2097159
  3197  200007  FF                 	db	255
  3198                           
  3199                           	psect	config
  3200                           
  3201                           ; Padding undefined space
  3202  300000                     	org	3145728
  3203  300000  FF                 	db	255
  3204                           
  3205                           ;Config register CONFIG1H @ 0x300001
  3206                           ;	Oscillator Selection bits
  3207                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
  3208                           ;	Fail-Safe Clock Monitor Enable bit
  3209                           ;	FCMEN = 0x0, unprogrammed default
  3210                           ;	Internal/External Oscillator Switchover bit
  3211                           ;	IESO = 0x0, unprogrammed default
  3212  300001                     	org	3145729
  3213  300001  06                 	db	6
  3214                           
  3215                           ;Config register CONFIG2L @ 0x300002
  3216                           ;	unspecified, using default values
  3217                           ;	Power-up Timer Enable bit
  3218                           ;	PWRT = 0x1, unprogrammed default
  3219                           ;	Brown-out Reset Enable bits
  3220                           ;	BOREN = 0x3, unprogrammed default
  3221                           ;	Brown-out Voltage bits
  3222                           ;	BORV = 0x3, unprogrammed default
  3223  300002                     	org	3145730
  3224  300002  1F                 	db	31
  3225                           
  3226                           ;Config register CONFIG2H @ 0x300003
  3227                           ;	unspecified, using default values
  3228                           ;	Watchdog Timer
  3229                           ;	WDT = 0x1, unprogrammed default
  3230                           ;	Watchdog Timer Postscale Select bits
  3231                           ;	WDTPS = 0xF, unprogrammed default
  3232  300003                     	org	3145731
  3233  300003  1F                 	db	31
  3234                           
  3235                           ;Config register CONFIG3L @ 0x300004
  3236                           ;	unspecified, using default values
  3237                           ;	Processor Data Memory Mode Select bits
  3238                           ;	MODE = 0x3, unprogrammed default
  3239                           ;	Address Bus Width Select bits
  3240                           ;	ADDRBW = 0x3, unprogrammed default
  3241                           ;	Data Bus Width Select bit
  3242                           ;	DATABW = 0x1, unprogrammed default
  3243                           ;	External Bus Data Wait Enable bit
  3244                           ;	WAIT = 0x1, unprogrammed default
  3245  300004                     	org	3145732
  3246  300004  F3                 	db	243
  3247                           
  3248                           ;Config register CONFIG3H @ 0x300005
  3249                           ;	unspecified, using default values
  3250                           ;	CCP2 MUX bit
  3251                           ;	CCP2MX = 0x1, unprogrammed default
  3252                           ;	ECCP MUX bit
  3253                           ;	ECCPMX = 0x1, unprogrammed default
  3254                           ;	Low-Power Timer1 Oscillator Enable bit
  3255                           ;	LPT1OSC = 0x0, unprogrammed default
  3256                           ;	MCLR Pin Enable bit
  3257                           ;	MCLRE = 0x1, unprogrammed default
  3258  300005                     	org	3145733
  3259  300005  83                 	db	131
  3260                           
  3261                           ;Config register CONFIG4L @ 0x300006
  3262                           ;	unspecified, using default values
  3263                           ;	Stack Full/Underflow Reset Enable bit
  3264                           ;	STVREN = 0x1, unprogrammed default
  3265                           ;	Single-Supply ICSP Enable bit
  3266                           ;	LVP = 0x1, unprogrammed default
  3267                           ;	Boot Block Size Select bits
  3268                           ;	BBSIZ = 0x0, unprogrammed default
  3269                           ;	Extended Instruction Set Enable bit
  3270                           ;	XINST = 0x0, unprogrammed default
  3271                           ;	Background Debugger Enable bit
  3272                           ;	DEBUG = 0x1, unprogrammed default
  3273  300006                     	org	3145734
  3274  300006  85                 	db	133
  3275                           
  3276                           ; Padding undefined space
  3277  300007                     	org	3145735
  3278  300007  FF                 	db	255
  3279                           
  3280                           ;Config register CONFIG5L @ 0x300008
  3281                           ;	unspecified, using default values
  3282                           ;	Code Protection bit Block 0
  3283                           ;	CP0 = 0x1, unprogrammed default
  3284                           ;	Code Protection bit Block 1
  3285                           ;	CP1 = 0x1, unprogrammed default
  3286                           ;	Code Protection bit Block 2
  3287                           ;	CP2 = 0x1, unprogrammed default
  3288                           ;	Code Protection bit Block 3
  3289                           ;	CP3 = 0x1, unprogrammed default
  3290                           ;	Code Protection bit Block 4
  3291                           ;	CP4 = 0x1, unprogrammed default
  3292                           ;	Code Protection bit Block 5
  3293                           ;	CP5 = 0x1, unprogrammed default
  3294                           ;	Code Protection bit Block 6
  3295                           ;	CP6 = 0x1, unprogrammed default
  3296                           ;	Code Protection bit Block 7
  3297                           ;	CP7 = 0x1, unprogrammed default
  3298  300008                     	org	3145736
  3299  300008  FF                 	db	255
  3300                           
  3301                           ;Config register CONFIG5H @ 0x300009
  3302                           ;	unspecified, using default values
  3303                           ;	Boot Block Code Protection bit
  3304                           ;	CPB = 0x1, unprogrammed default
  3305                           ;	Data EEPROM Code Protection bit
  3306                           ;	CPD = 0x1, unprogrammed default
  3307  300009                     	org	3145737
  3308  300009  C0                 	db	192
  3309                           
  3310                           ;Config register CONFIG6L @ 0x30000A
  3311                           ;	unspecified, using default values
  3312                           ;	Write Protection bit Block 0
  3313                           ;	WRT0 = 0x1, unprogrammed default
  3314                           ;	Write Protection bit Block 1
  3315                           ;	WRT1 = 0x1, unprogrammed default
  3316                           ;	Write Protection bit Block 2
  3317                           ;	WRT2 = 0x1, unprogrammed default
  3318                           ;	Write Protection bit Block 3
  3319                           ;	WRT3 = 0x1, unprogrammed default
  3320                           ;	Write Protection bit Block 4
  3321                           ;	WRT4 = 0x1, unprogrammed default
  3322                           ;	Write Protection bit Block 5
  3323                           ;	WRT5 = 0x1, unprogrammed default
  3324                           ;	Write Protection bit Block 6
  3325                           ;	WRT6 = 0x1, unprogrammed default
  3326                           ;	Write Protection bit Block 7
  3327                           ;	WRT7 = 0x1, unprogrammed default
  3328  30000A                     	org	3145738
  3329  30000A  FF                 	db	255
  3330                           
  3331                           ;Config register CONFIG6H @ 0x30000B
  3332                           ;	unspecified, using default values
  3333                           ;	Configuration Register Write Protection bit
  3334                           ;	WRTC = 0x1, unprogrammed default
  3335                           ;	Boot Block Write Protection bit
  3336                           ;	WRTB = 0x1, unprogrammed default
  3337                           ;	Data EEPROM Write Protection bit
  3338                           ;	WRTD = 0x1, unprogrammed default
  3339  30000B                     	org	3145739
  3340  30000B  E0                 	db	224
  3341                           
  3342                           ;Config register CONFIG7L @ 0x30000C
  3343                           ;	unspecified, using default values
  3344                           ;	Table Read Protection bit Block 0
  3345                           ;	EBTR0 = 0x1, unprogrammed default
  3346                           ;	Table Read Protection bit Block 1
  3347                           ;	EBTR1 = 0x1, unprogrammed default
  3348                           ;	Table Read Protection bit Block 2
  3349                           ;	EBTR2 = 0x1, unprogrammed default
  3350                           ;	Table Read Protection bit Block 3
  3351                           ;	EBTR3 = 0x1, unprogrammed default
  3352                           ;	Table Read Protection bit Block 4
  3353                           ;	EBTR4 = 0x1, unprogrammed default
  3354                           ;	Table Read Protection bit Block 5
  3355                           ;	EBTR5 = 0x1, unprogrammed default
  3356                           ;	Table Read Protection bit Block 6
  3357                           ;	EBTR6 = 0x1, unprogrammed default
  3358                           ;	Table Read Protection bit Block 7
  3359                           ;	EBTR7 = 0x1, unprogrammed default
  3360  30000C                     	org	3145740
  3361  30000C  FF                 	db	255
  3362                           
  3363                           ;Config register CONFIG7H @ 0x30000D
  3364                           ;	unspecified, using default values
  3365                           ;	Boot Block Table Read Protection bit
  3366                           ;	EBTRB = 0x1, unprogrammed default
  3367  30000D                     	org	3145741
  3368  30000D  40                 	db	64
  3369                           tosu	equ	0xFFF
  3370                           tosh	equ	0xFFE
  3371                           tosl	equ	0xFFD
  3372                           stkptr	equ	0xFFC
  3373                           pclatu	equ	0xFFB
  3374                           pclath	equ	0xFFA
  3375                           pcl	equ	0xFF9
  3376                           tblptru	equ	0xFF8
  3377                           tblptrh	equ	0xFF7
  3378                           tblptrl	equ	0xFF6
  3379                           tablat	equ	0xFF5
  3380                           prodh	equ	0xFF4
  3381                           prodl	equ	0xFF3
  3382                           indf0	equ	0xFEF
  3383                           postinc0	equ	0xFEE
  3384                           postdec0	equ	0xFED
  3385                           preinc0	equ	0xFEC
  3386                           plusw0	equ	0xFEB
  3387                           fsr0h	equ	0xFEA
  3388                           fsr0l	equ	0xFE9
  3389                           wreg	equ	0xFE8
  3390                           indf1	equ	0xFE7
  3391                           postinc1	equ	0xFE6
  3392                           postdec1	equ	0xFE5
  3393                           preinc1	equ	0xFE4
  3394                           plusw1	equ	0xFE3
  3395                           fsr1h	equ	0xFE2
  3396                           fsr1l	equ	0xFE1
  3397                           bsr	equ	0xFE0
  3398                           indf2	equ	0xFDF
  3399                           postinc2	equ	0xFDE
  3400                           postdec2	equ	0xFDD
  3401                           preinc2	equ	0xFDC
  3402                           plusw2	equ	0xFDB
  3403                           fsr2h	equ	0xFDA
  3404                           fsr2l	equ	0xFD9
  3405                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        22
    BSS         40
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     10      74
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_display_task
    _note_generate_task->___lwmod
    _input_task->_compare_results
    _display_task->_DELAY_ms
    _check_rc0->_read_tmr1

Critical Paths under _lowPriorityISR in COMRAM

    None.

Critical Paths under _highPriorityISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _lowPriorityISR in BANK0

    None.

Critical Paths under _highPriorityISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _lowPriorityISR in BANK1

    None.

Critical Paths under _highPriorityISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _lowPriorityISR in BANK2

    None.

Critical Paths under _highPriorityISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _lowPriorityISR in BANK3

    None.

Critical Paths under _highPriorityISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _lowPriorityISR in BANK4

    None.

Critical Paths under _highPriorityISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _lowPriorityISR in BANK5

    None.

Critical Paths under _highPriorityISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _lowPriorityISR in BANK6

    None.

Critical Paths under _highPriorityISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _lowPriorityISR in BANK7

    None.

Critical Paths under _highPriorityISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _lowPriorityISR in BANK8

    None.

Critical Paths under _highPriorityISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _lowPriorityISR in BANK9

    None.

Critical Paths under _highPriorityISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _lowPriorityISR in BANK10

    None.

Critical Paths under _highPriorityISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _lowPriorityISR in BANK11

    None.

Critical Paths under _highPriorityISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _lowPriorityISR in BANK12

    None.

Critical Paths under _highPriorityISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _lowPriorityISR in BANK13

    None.

Critical Paths under _highPriorityISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _lowPriorityISR in BANK14

    None.

Critical Paths under _highPriorityISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _lowPriorityISR in BANK15

    None.

Critical Paths under _highPriorityISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3889
                          _check_rc0
                       _display_task
                           _init_all
                         _input_task
                 _note_generate_task
                     _set_timer_task
 ---------------------------------------------------------------------------------
 (1) _set_timer_task                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _note_generate_task                                   2     2      0     909
                                              7 COMRAM     2     2      0
                            ___lwmod
                        _rightRotate
 ---------------------------------------------------------------------------------
 (2) _rightRotate                                          4     2      2     598
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              2 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _input_task                                           0     0      0       0
                    _compare_results
 ---------------------------------------------------------------------------------
 (2) _compare_results                                      2     2      0       0
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _init_all                                             0     0      0       0
                    _init_interrupts
                         _init_ports
                         _init_timer
                       _start_system
 ---------------------------------------------------------------------------------
 (2) _start_system                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_timer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_interrupts                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display_task                                         2     2      0    2980
                                              8 COMRAM     2     2      0
                           _DELAY_ms
 ---------------------------------------------------------------------------------
 (2) _DELAY_ms                                             6     4      2    2980
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _check_rc0                                            0     0      0       0
                          _read_tmr1
 ---------------------------------------------------------------------------------
 (2) _read_tmr1                                            2     2      0       0
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _lowPriorityISR                                       1     1      0       0
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _highPriorityISR                                      1     1      0       0
                                              0 COMRAM     1     1      0
                           _tmr0_int
 ---------------------------------------------------------------------------------
 (5) _tmr0_int                                             0     0      0       0
                      _iterate_notes
 ---------------------------------------------------------------------------------
 (6) _iterate_notes                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _check_rc0
     _read_tmr1
   _display_task
     _DELAY_ms
   _init_all
     _init_interrupts
     _init_ports
     _init_timer
     _start_system
   _input_task
     _compare_results
   _note_generate_task
     ___lwmod
     _rightRotate
   _set_timer_task

 _lowPriorityISR (ROOT)

 _highPriorityISR (ROOT)
   _tmr0_int
     _iterate_notes

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      A      4A       1       78.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4A      32        0.0%
DATA                 0      0      4A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Fri May 27 23:55:20 2022

                          _E 003B                            _L 003E                            _O 003D  
                          _S 003C                            _a 0001                            _d 0039  
                          _n 003A                           _RA 000D                           u30 0C0C  
                         u31 0C08        __size_of_start_system 0016                           u90 054E  
                         u91 054A                           bsr 000FE0                          l201 0BB6  
                        l204 0C78                          l127 0B34                          l160 0CEA  
                        l217 0896                          l157 0CE0                          l262 053A  
                        l174 0568                          l183 0756                          l168 0B7E  
                        l272 0CD0                          l265 0CBE                          l177 0614  
                        l194 0A24                          l188 0C20                          l269 0AE6  
                        l794 0A88                          l963 0CD2                          l787 0A80  
                        l965 0CE2                          l967 0CE6                          l959 0AE8  
                        l991 0C18                          l969 0CE8                          l987 0BEE  
                        l989 0C0C                          l999 0C52            ??_init_interrupts 0041  
                        u100 0560                          u101 055C                          u110 0578  
                        u111 0574                          u200 0624                          u120 0588  
                        u201 0620                          u121 0584                          u210 0634  
                        u130 059A                          u211 0630                          u131 0596  
                        u300 071C                          u220 0646                          u140 05AC  
                        u301 0718                          u221 0642                          u141 05A8  
                        u310 072E                          u230 0658                          u150 05C8  
                        u311 072A                          u231 0654                          u151 05C4  
                        u320 073E                          u240 068A                          u160 05D8  
                        u321 073A                          u241 0686                          u161 05D4  
                        u330 074E                          u250 069C                          u170 05E8  
                        u331 074A                          u251 0698                          u171 05E4  
                        u340 09C6                          u260 06C0                          u180 05FA  
                        u341 09C2                          u261 06BC                          u181 05F6  
                        u350 09DE                          u270 06D0                          u190 060C  
                        u351 09DA                          u271 06CC                          u191 0608  
                        u360 09F4                          u280 06E0                          u361 09F0  
                        u281 06DC                          u370 0A0E                          u290 06F2  
                        u371 0A0A                          u291 06EE                          u800 0A38  
                        u801 0A34                          u810 0A56                          u811 0A52  
                        u900 00F2                          u820 0A6C                          u901 00EE  
                        u821 0A68                          u910 011A                          u830 076A  
                        u911 0116                          u831 0766                          u680 0A9A  
                        u920 0138                          u840 083A                          u681 0A96  
                        u921 0134                          u841 0836                          u690 0AAC  
                        u770 0B64                          u930 0160                          u850 0866  
                        u691 0AA8                          u771 0B60                          u931 015C  
                        u851 0862                          u780 0B7E                          u940 0188  
                        u860 0048                          u781 0B7A                          u941 0184  
                        u861 0044                          u950 01A6                          u870 0070  
                        u790 0B8E                          u951 01A2                          u871 006C  
                        u791 0B8A                ?_display_task 003F                          u960 01CE  
                        u880 0098                          u961 01CA                          u881 0094  
                        u970 01F6                          u890 00CA                          u971 01F2  
                        u891 00C6                          u980 0214                          u981 0210  
                        u990 023C                          u991 0238                          _low 001D  
                        wreg 000FE8                         l1001 0C66                         l1003 0CAA  
                       l1005 0CAE                         l1101 09CC                         l1111 0A14  
                       l1103 09DE                         l1113 0A1C                         l1105 09E2  
                       l1041 0560                         l1107 09F4                         l1043 0578  
                       l1051 05B4                         l1109 0A0E                         l1061 060C  
                       l1053 05C8                         l1045 0588                         l1037 053C  
                       l1063 0624                         l1071 0678                         l1055 05D8  
                       l1047 059A                         l1039 054E                         l1081 06D0  
                       l1073 068A                         l1065 0634                         l1057 05E8  
                       l1049 05AC                         l1091 072E                         l1083 06E0  
                       l1075 069C                         l1067 0646                         l1059 05FA  
                       l1093 073E                         l1085 06F2                         l1069 0658  
                       l1077 06AC                         l1095 074E                         l1087 070A  
                       l1079 06C0                         l1097 09B6                         l1601 081A  
                       l1089 071C                         l1099 09C6                         l1603 0826  
                       l1541 0B36                         l1701 018C                         l1621 0036  
                       l1605 083A                         l1471 0AD4                         l1551 0B4E  
                       l1543 0B42                         l1711 01B6                         l1703 0190  
                       l1631 0070                         l1623 0048                         l1615 002A  
                       l1607 0852                         l1473 0AD8                         l1465 0A8A  
                       l1553 0B64                         l1801 0324                         l1721 01E2  
                       l1713 01BA                         l1705 0194                         l1641 00A4  
                       l1633 007C                         l1625 0054                         l1617 002E  
                       l1561 0BA8                         l1609 0866                         l1475 0AE0  
                       l1467 0A9A                         l1555 0B68                         l1803 0328  
                       l1731 01FE                         l1715 01CE                         l1707 01A6  
                       l1651 00CA                         l1643 00A8                         l1635 0080  
                       l1627 0058                         l1619 0032                         l1571 0A56  
                       l1563 0A26                         l1477 0AE4                         l1469 0AAC  
                       l1549 0B4A                         l1821 036A                         l1813 0344  
                       l1805 032C                         l1741 0228                         l1733 0202  
                       l1717 01DA                         l1709 01B2                         l1661 00FE  
                       l1653 00D6                         l1645 00B0                         l1637 0084  
                       l1629 005C                         l1573 0A6C                         l1565 0A38  
                       l1557 0B80                         l1581 076A                         l1911 048C  
                       l1831 0396                         l1823 036E                         l1815 0348  
                       l1743 023C                         l1735 0214                         l1719 01DE  
                       l1663 0102                         l1655 00DA                         l1647 00B4  
                       l1639 0098                         l1479 0CC0                         l1575 0A74  
                       l1567 0A40                         l1559 0B8E                         l1591 07B2  
                       l1583 0772                         l1913 0490                         l1905 0474  
                       l1841 03B2                         l1833 039A                         l1825 0372  
                       l1817 034C                         l1761 0270                         l1745 0248  
                       l1737 0220                         l1729 01FA                         l1681 0144  
                       l1673 011E                         l1665 0106                         l1657 00DE  
                       l1649 00B8                         l1577 0A7A                         l1569 0A48  
                       l1593 07BE                         l1585 077A                         l1907 047C  
                       l1851 03DC                         l1843 03B6                         l1827 0386  
                       l1819 035E                         l1771 02AA                         l1763 0282  
                       l1747 024C                         l1739 0224                         l1691 0170  
                       l1683 0148                         l1675 0122                         l1659 00F2  
                       l1595 07CA                         l1587 079A                         l1579 0758  
                       l1931 093E                         l1909 0488                         l1861 0408  
                       l1853 03E0                         l1845 03BA                         l1829 0392  
                       l1773 02B6                         l1765 028E                         l1757 0268  
                       l1749 0250                         l1693 0174                         l1685 014C  
                       l1677 0126                         l1589 07A6                         l1941 09A2  
                       l1933 0942                         l1871 0428                         l1855 03F4  
                       l1847 03CC                         l1791 02F0                         l1775 02BA  
                       l1767 0292                         l1759 026C                         l1687 0160  
                       l1679 0138                         l1919 04A8                         l1599 07D6  
                       l1943 09A6                         l1935 0954                         l1961 04C6  
                       l1881 045C                         l1873 0434                         l1857 0400  
                       l1849 03D8                         l1793 02FC                         l1785 02D6  
                       l1777 02BE                         l1769 0296                         l1689 016C  
                       l1945 09AA                         l1937 0964                         l1929 093A  
                       l1963 0524                         l1883 0460                         l1875 0438  
                       l1859 0404                         l1795 0300                         l1787 02DA  
                       l1939 097E                         l1885 0464                         l1877 043C  
                       l1869 0420                         l1797 0304                         l1789 02DE  
                       l1879 0450                         l1799 0318                         l1959 07EC  
                       u1000 0264                         u1001 0260                         u1010 0282  
                       u1011 027E                         u1100 03CC                         u1020 02AA  
                       u1101 03C8                         u1021 02A6                         u1110 03F4  
                       u1030 02D2                         u1111 03F0                         u1031 02CE  
                       u1120 041C                         u1040 02F0                         u1121 0418  
                       u1041 02EC                         u1050 0318                         u1130 0954  
                       u1051 0314                         u1131 0950                         u1060 0340  
                       u1140 097E                         u1061 033C                         u1141 097A  
                       u1070 035E                         u1071 035A                         u1080 0386  
                       u1081 0382                         u1090 03AE                         u1091 03AA  
                       _LATA 000F89                         _LATB 000F8A                         _LATC 000F8B  
                       _LATD 000F8C                         _LATE 000F8D                         _LATF 000F8E  
                       _LATG 000F8F                         _TMR0 000FD6                         _high 001F  
                       _main 093A                         _wait 001B                         fsr1l 000FE1  
                       btemp 004B                         start 0026                 _start_system 0CAA  
           __end_of_DELAY_ms 0B80   __end_of_note_generate_task 0898      __end_of_compare_results 0C22  
               ___param_bank 000000                        ?_main 003F               ??_display_task 0047  
                      _T0CON 000FD5                        _T1CON 000FCD                        i1l154 001E  
            __end_of___lwmod 0A8A                        i2l130 0C92                        i2l135 0C50  
                      i2l149 0936                        i2l961 0C7A                        _TMR1H 000FCF  
                      _TMR1L 000FCE                        _PORTA 000F80                        _PORTB 000F81  
                      _PORTC 000F82                        _PORTD 000F83                        _PORTE 000F84  
                      _PORTF 000F85                        _PORTG 000F86                        _PORTH 000F87  
                      _PORTJ 000F88                        _TRISA 000F92                        _TRISB 000F93  
                      _TRISC 000F94                        _TRISD 000F95                        _TRISE 000F96  
                      _TRISF 000F97                        _TRISG 000F98                        _TRISH 000F99  
                      _TRISJ 000F9A                        _ander 0033                        _light 0015  
                      _level 0025                        tablat 000FF5                        ttemp5 004C  
                      ttemp6 004F                        ttemp7 0053                        status 000FD8  
                      wtemp8 004C               _lowPriorityISR 0018              __initialization 0BB8  
               __end_of_main 09B6                       ??_main 0049                __activetblptr 000003  
   __size_of_highPriorityISR 0932                       i2l1031 0C40                       i2l1023 0C22  
                     i2l1033 0C4A                       i2l1025 0C24                       i2l1035 0C4E  
                     i2l1027 0C28                       i2l1029 0C2E                       i2l1501 0914  
                     i2l1503 091A                       i2l1505 091E                       i2l1507 0926  
                     i2l1509 092E                       i2l1481 089A                       i2l1491 08D2  
                     i2l1483 08A8                       i2l1485 08C6                       i2l1493 08D8  
                     i2l1495 08E0                       i2l1487 08CA                       i2l1497 08F2  
                     i2l1489 08D0                       i2l1499 0902                 ?_rightRotate 0041  
                     _INTCON 000FF2                       i2u8_40 0C40                       i2u8_41 0C3C  
     __end_of_lowPriorityISR 0026         _decrease_health_flag 000B                    DELAY_ms@i 0043  
                  DELAY_ms@j 0045             ?_compare_results 003F                       _health 0049  
                  ??___lwmod 0045             DELAY_ms@ms_Count 0041             __end_of_init_all 0CD2  
                     clear_0 0BDE             __end_of_tmr0_int 0C52                 __pdataCOMRAM 0029  
                     tblptrh 000FF7                       tblptrl 000FF6                       tblptru 000FF8  
                  ?_DELAY_ms 0041                   __accesstop 0060      __end_of__initialization 0BE4  
       __end_of_display_task 053C              ?_lowPriorityISR 003F                ___rparam_used 000001  
            _init_interrupts 0CE2               __pcstackCOMRAM 003F           __size_of_check_rc0 005E  
                 ??_DELAY_ms 0043                   __pnvCOMRAM 0049           __size_of_read_tmr1 0028  
          ??_highPriorityISR 003F       __size_of_iterate_notes 001A           _note_generate_flag 000F  
         _note_generate_task 0758      __size_of_set_timer_task 021C                      i2u70_40 08A8  
                    i2u70_41 08A4                      i2u71_40 08C6                      i2u71_41 08C2  
                    i2u72_40 08F2                      i2u72_41 08EE                      i2u73_40 0902  
                    i2u73_41 08FE                      i2u74_40 0914                      i2u74_41 0910  
        ?_note_generate_task 003F            __end_of_check_rc0 0AE8      __end_of_init_interrupts 0CEC  
                  ?_init_all 003F         __size_of_rightRotate 0038                    ?_tmr0_int 003F  
                    _l2_over 0003                      __Hparam 0000                      __Lparam 0000  
               _health_check 0005         ??_note_generate_task 0046                      ___lwmod 0A26  
                    __pcinit 0BB8                   _init_timer 0CD2                   _level_init 0037  
                 _init_ports 0AE8                      __ramtop 1000                      __ptext0 093A  
                    __ptext1 053C                      __ptext2 0758                      __ptext3 0B80  
                    __ptext4 0A26                      __ptext5 09B6                      __ptext6 0BEE  
                    __ptext7 0CC0                      __ptext8 0CAA                      __ptext9 0CD2  
                  _T0CONbits 000FD5                    _T1CONbits 000FCD                      _input_G 0011  
                    _t_count 0027            __end_of_read_tmr1 0C7A                   _input_task 09B6  
             __pintcode_body 0898        __size_of_display_task 0512         end_of_initialization 0BE4  
              _iterate_notes 0C7A                   ??_init_all 0041                      int_func 0898  
                 ??_tmr0_int 003F                   _note_count 0023                      postdec1 000FE5  
                    postinc0 000FEE                   _timer_flag 0007                 _display_task 002A  
           ??_lowPriorityISR 0040               ?_iterate_notes 003F            __size_of_DELAY_ms 004A  
                 _start_flag 0009             ?_init_interrupts 003F                __pidataCOMRAM 0C94  
                ?_init_timer 003F                  ?_init_ports 003F     __size_of_compare_results 0034  
             _set_timer_task 053C          start_initialization 0BB8                  ?_input_task 003F  
            _highPriorityISR 0008                ?_start_system 003F       __end_of_set_timer_task 0758  
                __pbssCOMRAM 0001              ??_iterate_notes 003F          __size_of_init_timer 0010  
        __size_of_init_ports 004E               ??_start_system 0041                    _check_rc0 0A8A  
             _initial_timer1 0021            __size_of_init_all 0012                    __pintcode 0008  
          __size_of_tmr0_int 0030          __size_of_input_task 0070                     ?___lwmod 0041  
                __pintcodelo 0018              ?_set_timer_task 003F      __end_of_highPriorityISR 093A  
                  _count_cap 0035                     _DELAY_ms 0B36            ??_compare_results 0041  
                  _read_tmr1 0C52                    _exit_flag 0019                ??_rightRotate 0043  
                 ?_check_rc0 003F  __size_of_note_generate_task 0140                   _ADCON0bits 000FC2  
                  copy_data0 0BCC                   ?_read_tmr1 003F                 rightRotate@n 0041  
                   __Hrparam 0000          __end_of_rightRotate 0BB8                     __Lrparam 0000  
              _health_points 0029                 ??_init_timer 0041             __size_of___lwmod 0064  
               ??_init_ports 0041             ?_highPriorityISR 003F         __end_of_start_system 0CC0  
               ??_input_task 0043                     __ptext10 0AE8                     __ptext11 0CE2  
                   __ptext12 002A                     __ptext13 0B36                     __ptext14 0A8A  
                   __ptext15 0C52                     __ptext18 0C22                     __ptext19 0C7A  
                   _init_all 0CC0                __size_of_main 007C                  ??_check_rc0 0043  
         __end_of_init_timer 0CE2           __end_of_init_ports 0B36                     _randomed 0017  
                   _tmr0_int 0C22     __size_of_init_interrupts 000A                     int$flags 004B  
         __end_of_input_task 0A26                   _INTCONbits 000FF2                  ??_read_tmr1 0041  
                   intlevel1 0000                     intlevel2 0000           _input_compare_flag 0013  
                _rightRotate 0B80             ___lwmod@dividend 0041             ??_set_timer_task 0041  
    __size_of_lowPriorityISR 000E              _compare_results 0BEE              ___lwmod@divisor 0043  
            ___lwmod@counter 0045        __end_of_iterate_notes 0C94  
